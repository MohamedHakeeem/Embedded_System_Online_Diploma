/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stm32f103x6_gpio_driver.h>
#include <STM32F103X6.h>
#include "lcd.h"
#include "keypad.h"



// 7segment display [Common ANODE] >>>>> Hexadecimal for each of the digit.
#define ZERO 0x01
#define ONE 0x79
#define TWO 0x24
#define THREE 0x30
#define FOUR 0x4C
#define FIVE 0x12
#define SIX 0x02
#define SEVEN 0x19
#define EIGHT 0x00
#define NINE 0x10



void clock_init() {
	//Enable clock GPIOA
	MCAL_GPIO_Enable_ClocK(GPIOA);
	//Enable clock GPIOB Bit 3 IOPBEN: IO port B clock enable
	MCAL_GPIO_Enable_ClocK(GPIOB);
}


void GPIO_7Segment_init() {

	GPIO_PinConfig_t Segment_PinCfg ;


	Segment_PinCfg.GPIO_PinNumber = GPIO_PIN_9;
	Segment_PinCfg.GPIO_Mode = GPIO_Mode_Out_push_pull;
	Segment_PinCfg.GPIO_Speed = GPIO_Speed_10MHz;
	MCAL_GPIO_Init(GPIOB, &Segment_PinCfg);

	Segment_PinCfg.GPIO_PinNumber = GPIO_PIN_10;
	Segment_PinCfg.GPIO_Mode = GPIO_Mode_Out_push_pull;
	Segment_PinCfg.GPIO_Speed = GPIO_Speed_10MHz;
	MCAL_GPIO_Init(GPIOB, &Segment_PinCfg);


	Segment_PinCfg.GPIO_PinNumber = GPIO_PIN_11;
	Segment_PinCfg.GPIO_Mode = GPIO_Mode_Out_push_pull;
	Segment_PinCfg.GPIO_Speed = GPIO_Speed_10MHz;
	MCAL_GPIO_Init(GPIOB, &Segment_PinCfg);


	Segment_PinCfg.GPIO_PinNumber = GPIO_PIN_12;
	Segment_PinCfg.GPIO_Mode = GPIO_Mode_Out_push_pull;
	Segment_PinCfg.GPIO_Speed = GPIO_Speed_10MHz;
	MCAL_GPIO_Init(GPIOB, &Segment_PinCfg);


	Segment_PinCfg.GPIO_PinNumber = GPIO_PIN_13;
	Segment_PinCfg.GPIO_Mode = GPIO_Mode_Out_push_pull;
	Segment_PinCfg.GPIO_Speed = GPIO_Speed_10MHz;
	MCAL_GPIO_Init(GPIOB, &Segment_PinCfg);

	Segment_PinCfg.GPIO_PinNumber = GPIO_PIN_14;
	Segment_PinCfg.GPIO_Mode = GPIO_Mode_Out_push_pull;
	Segment_PinCfg.GPIO_Speed = GPIO_Speed_10MHz;
	MCAL_GPIO_Init(GPIOB, &Segment_PinCfg);


	Segment_PinCfg.GPIO_PinNumber = GPIO_PIN_15;
	Segment_PinCfg.GPIO_Mode = GPIO_Mode_Out_push_pull;
	Segment_PinCfg.GPIO_Speed = GPIO_Speed_10MHz;
	MCAL_GPIO_Init(GPIOB, &Segment_PinCfg);

}

void wait_ms(uint32_t time) {
	uint32_t i, j;
	for (i = 0; i < time; i++)
		for (j = 0; j < 255; j++)
			;
}

int main(void)
{
	char key_pressed;
	unsigned char i;
	clock_init();
	LCD_INIT();
	GPIO_7Segment_init();

	LCD_clear_screen();
	LCD_GOTO_XY(2,2);
	LCD_WRITE_STRING("Hello ^___^");
	LCD_GOTO_XY(1, 0);
	LCD_WRITE_STRING("Mohamed_Hakim");
	wait_ms(100);
	LCD_clear_screen();

	unsigned char LCD_DISPLAY [10] = {'9', '8', '7', '6', '5', '4', '3', '2', '1', '0'};
	unsigned char Segment_DISPLAY [11] = {ZERO, ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN, EIGHT, NINE, ZERO};
	for ( i = 0 ; i < 10; i++)
	{
		LCD_WRITE_CHAR(LCD_DISPLAY[i]);
		MCAL_GPIO_WritePort(GPIOB, Segment_DISPLAY[i] << 9); /* write data on to the LED port */
		wait_ms(100);
	}


	LCD_clear_screen();
	Keypad_init();
	LCD_WRITE_STRING("Keypad is ready");
	wait_ms(300);
	LCD_clear_screen();


	while (1)
	{
		key_pressed = Keypad_getkey();
		switch (key_pressed)
		{
		case 'A':
			break;
		case '?':
			LCD_clear_screen();
			break;
		default:
			LCD_WRITE_CHAR(key_pressed);
			break;

		}

	}

}

