
;; Function MCAL_GPIO_Enable_ClocK (MCAL_GPIO_Enable_ClocK, funcdef_no=3, decl_uid=5724, cgraph_uid=4, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=24,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 15:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 27:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 29:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 34:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 40:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 41:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 43:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 48:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 56:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 57:  (0) m  (1) lk*r {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 11
EBB 10

********** Pseudo live ranges #1: **********

  BB 10
  BB 11
   Insn 72: point = 0, n_alt = -1
  BB 3
   Insn 62: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = 6
   Insn 14: point = 1, n_alt = 0
   Insn 13: point = 3, n_alt = 5
   Insn 12: point = 4, n_alt = 5
   Insn 11: point = 6, n_alt = 5
  BB 5
   Insn 64: point = 7, n_alt = -1
   Insn 29: point = 7, n_alt = 6
   Insn 28: point = 8, n_alt = 0
   Insn 27: point = 10, n_alt = 5
   Insn 26: point = 11, n_alt = 5
   Insn 25: point = 13, n_alt = 5
  BB 9
   Insn 57: point = 14, n_alt = 6
   Insn 56: point = 15, n_alt = 0
   Insn 55: point = 17, n_alt = 5
   Insn 54: point = 18, n_alt = 5
   Insn 53: point = 20, n_alt = 5
  BB 7
   Insn 66: point = 21, n_alt = -1
   Insn 43: point = 21, n_alt = 6
   Insn 42: point = 22, n_alt = 0
   Insn 41: point = 24, n_alt = 5
   Insn 40: point = 25, n_alt = 5
   Insn 39: point = 27, n_alt = 5
  BB 8
   Insn 51: point = 28, n_alt = -1
   Insn 50: point = 28, n_alt = 1
   Insn 49: point = 29, n_alt = 5
   Insn 48: point = 30, n_alt = 5
  BB 6
   Insn 37: point = 31, n_alt = -1
   Insn 36: point = 31, n_alt = 1
   Insn 35: point = 32, n_alt = 5
   Insn 34: point = 33, n_alt = 5
  BB 4
   Insn 23: point = 34, n_alt = -1
   Insn 22: point = 34, n_alt = 1
   Insn 21: point = 35, n_alt = 5
   Insn 20: point = 36, n_alt = 5
  BB 2
   Insn 9: point = 37, n_alt = -1
   Insn 8: point = 37, n_alt = 1
   Insn 7: point = 38, n_alt = 5
   Insn 6: point = 39, n_alt = 5
   Insn 2: point = 40, n_alt = 6
 r113: [5..6]
 r114: [2..4]
 r115: [0..3]
 r116: [0..1]
 r117: [12..13]
 r118: [9..11]
 r119: [7..10]
 r120: [7..8]
 r121: [26..27]
 r122: [23..25]
 r123: [21..24]
 r124: [21..22]
 r125: [19..20]
 r126: [16..18]
 r127: [14..17]
 r128: [14..15]
 r129: [37..39]
 r130: [37..38]
 r131: [34..36]
 r132: [34..35]
 r133: [31..33]
 r134: [31..32]
 r135: [28..30]
 r136: [28..29]
Compressing live ranges: from 40 to 32 - 80%
Ranges after the compression:
 r113: [4..5]
 r114: [2..3]
 r115: [0..3]
 r116: [0..1]
 r117: [10..11]
 r118: [8..9]
 r119: [6..9]
 r120: [6..7]
 r121: [22..23]
 r122: [20..21]
 r123: [18..21]
 r124: [18..19]
 r125: [16..17]
 r126: [14..15]
 r127: [12..15]
 r128: [12..13]
 r129: [30..31]
 r130: [30..31]
 r131: [28..29]
 r132: [28..29]
 r133: [26..27]
 r134: [26..27]
 r135: [24..25]
 r136: [24..25]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 28
changing reg in insn 27
changing reg in insn 29
changing reg in insn 28
changing reg in insn 29
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 42
changing reg in insn 41
changing reg in insn 43
changing reg in insn 42
changing reg in insn 43
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 56
changing reg in insn 55
changing reg in insn 57
changing reg in insn 56
changing reg in insn 57
changing reg in insn 6
changing reg in insn 8
changing reg in insn 7
changing reg in insn 8
changing reg in insn 20
changing reg in insn 22
changing reg in insn 21
changing reg in insn 22
changing reg in insn 34
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 48
changing reg in insn 50
changing reg in insn 49
changing reg in insn 50
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_Enable_ClocK

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={9d,8u} r3={17d,16u} r7={1d,16u} r13={1d,11u} r14={1d} r100={4d,4u} r102={1d,1u} 
;;    total ref usage 93{36d,57u,0e} in 41{41 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 129 130
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])
        (reg:SI 0 r0 [ GPIOx ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":36:1 977 {*thumb2_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [129])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":37:4 977 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 2 r2 [130])
        (const_int 1073809408 [0x40010800])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":37:4 977 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [129])
            (reg:SI 2 r2 [130]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":37:4 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":37:4 273 {arm_cond_branch}
     (nil)
 -> 18)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":39:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 24 [0x18])) [1 _1->APB2ENR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":39:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 3 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":39:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (ior:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 4 [0x4]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":39:3 106 {*iorsi3_insn}
     (nil))
(insn 15 14 62 3 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:115 _3 ] [115])
                (const_int 24 [0x18])) [1 _3->APB2ENR+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":39:3 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 62 15 63 3 (set (pc)
        (label_ref:SI 71)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":58:1 284 {*arm_jump}
     (nil)
 -> 71)
;;  succ:       11 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 63 62 18)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 131 132
(code_label 18 63 19 4 2 (nil) [1 uses])
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:SI 3 r3 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":42:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 21 20 22 4 (set (reg:SI 2 r2 [132])
        (const_int 1073810432 [0x40010c00])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":42:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 22 21 23 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [131])
            (reg:SI 2 r2 [132]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":42:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 23 22 24 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":42:9 273 {arm_cond_branch}
     (nil)
 -> 32)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 117 118 119 120
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":44:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 26 25 27 5 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117])
                (const_int 24 [0x18])) [1 _5->APB2ENR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":44:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 27 26 28 5 (set (reg/f:SI 2 r2 [orig:119 _7 ] [119])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":44:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 28 27 29 5 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (ior:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int 8 [0x8]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":44:3 106 {*iorsi3_insn}
     (nil))
(insn 29 28 64 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:119 _7 ] [119])
                (const_int 24 [0x18])) [1 _7->APB2ENR+0 S4 A32])
        (reg:SI 3 r3 [orig:120 _8 ] [120])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":44:3 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 64 29 65 5 (set (pc)
        (label_ref:SI 71)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":58:1 284 {*arm_jump}
     (nil)
 -> 71)
;;  succ:       11 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 65 64 32)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 133 134
(code_label 32 65 33 6 4 (nil) [1 uses])
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":46:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 35 34 36 6 (set (reg:SI 2 r2 [134])
        (const_int 1073811456 [0x40011000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":46:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 36 35 37 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [133])
            (reg:SI 2 r2 [134]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":46:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 37 36 38 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":46:9 273 {arm_cond_branch}
     (nil)
 -> 46)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 121 122 123 124
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":48:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 40 39 41 7 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:121 _9 ] [121])
                (const_int 24 [0x18])) [1 _9->APB2ENR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":48:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 41 40 42 7 (set (reg/f:SI 2 r2 [orig:123 _11 ] [123])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":48:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 42 41 43 7 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (ior:SI (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 16 [0x10]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":48:3 106 {*iorsi3_insn}
     (nil))
(insn 43 42 66 7 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:123 _11 ] [123])
                (const_int 24 [0x18])) [1 _11->APB2ENR+0 S4 A32])
        (reg:SI 3 r3 [orig:124 _12 ] [124])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":48:3 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 66 43 67 7 (set (pc)
        (label_ref:SI 71)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":58:1 284 {*arm_jump}
     (nil)
 -> 71)
;;  succ:       11 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 67 66 46)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 135 136
(code_label 46 67 47 8 5 (nil) [1 uses])
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg:SI 3 r3 [135])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":50:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 49 48 50 8 (set (reg:SI 2 r2 [136])
        (const_int 1073812480 [0x40011400])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":50:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 50 49 51 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [135])
            (reg:SI 2 r2 [136]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":50:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 51 50 52 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 71)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":50:9 273 {arm_cond_branch}
     (nil)
 -> 71)
;;  succ:       9 (FALLTHRU)
;;              11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 125 126 127 128
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 9 (set (reg/f:SI 3 r3 [orig:125 _13 ] [125])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":52:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 54 53 55 9 (set (reg:SI 3 r3 [orig:126 _14 ] [126])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:125 _13 ] [125])
                (const_int 24 [0x18])) [1 _13->APB2ENR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":52:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 55 54 56 9 (set (reg/f:SI 2 r2 [orig:127 _15 ] [127])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":52:3 977 {*thumb2_movsi_insn}
     (nil))
(insn 56 55 57 9 (set (reg:SI 3 r3 [orig:128 _16 ] [128])
        (ior:SI (reg:SI 3 r3 [orig:126 _14 ] [126])
            (const_int 32 [0x20]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":52:3 106 {*iorsi3_insn}
     (nil))
(insn 57 56 71 9 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:127 _15 ] [127])
                (const_int 24 [0x18])) [1 _15->APB2ENR+0 S4 A32])
        (reg:SI 3 r3 [orig:128 _16 ] [128])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":52:3 977 {*thumb2_movsi_insn}
     (nil))
;;  succ:       11 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 9, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8
;;              7 [always] 
;;              9 [always]  (FALLTHRU)
;;              5 [always] 
;;              3 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 71 57 70 11 6 (nil) [4 uses])
(note 70 71 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 70 60 11 (const_int 0 [0]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":58:1 311 {nop}
     (nil))
;;  succ:       10 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL, MODIFIED)
;;  pred:       11 [always]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 60 72 61 10 1 (nil) [0 uses])
(note 61 60 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 85 61 0 NOTE_INSN_DELETED)

;; Function Get_Pos_CRLH (Get_Pos_CRLH, funcdef_no=4, decl_uid=5752, cgraph_uid=5, symbol_order=4)

      Creating newreg=121
Removing SCRATCH in insn #92 (nop 4)
rescanning insn with uid = 92.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 30:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 38:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 46:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 54:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 62:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) r  (1) I {*arm_cmpsi_insn}
            alt=0: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 70:  (0) r  (1) I {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) l  (1) Py {*arm_cmpsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) l  (1) Py {*arm_cmpsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 91:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            4 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) r  (1) rI  (4) =&r {*thumb2_casesi_internal}
      Change to class GENERAL_REGS for r121
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 110:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 115:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 125:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 130:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 140:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 150:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 155:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 170:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 180:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 185:  (0) r  (1) I {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
EBB 23 24
EBB 25
EBB 26
EBB 27
EBB 28
EBB 29
EBB 30
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35
EBB 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42

********** Pseudo live ranges #1: **********

  BB 42
   Insn 193: point = 0, n_alt = -1
   Insn 192: point = 0, n_alt = -2
   Insn 188: point = 1, n_alt = -2
  BB 40
   Insn 228: point = 4, n_alt = -1
   Insn 180: point = 4, n_alt = 1
  BB 39
   Insn 226: point = 5, n_alt = -1
   Insn 175: point = 5, n_alt = 1
  BB 38
   Insn 224: point = 6, n_alt = -1
   Insn 170: point = 6, n_alt = 1
  BB 37
   Insn 222: point = 7, n_alt = -1
   Insn 165: point = 7, n_alt = 1
  BB 36
   Insn 220: point = 8, n_alt = -1
   Insn 160: point = 8, n_alt = 1
  BB 35
   Insn 218: point = 9, n_alt = -1
   Insn 155: point = 9, n_alt = 1
  BB 34
   Insn 216: point = 10, n_alt = -1
   Insn 150: point = 10, n_alt = 1
  BB 33
   Insn 214: point = 11, n_alt = -1
   Insn 145: point = 11, n_alt = 1
  BB 32
   Insn 212: point = 12, n_alt = -1
   Insn 140: point = 12, n_alt = 1
  BB 31
   Insn 210: point = 13, n_alt = -1
   Insn 135: point = 13, n_alt = 1
  BB 30
   Insn 208: point = 14, n_alt = -1
   Insn 130: point = 14, n_alt = 1
  BB 29
   Insn 206: point = 15, n_alt = -1
   Insn 125: point = 15, n_alt = 1
  BB 28
   Insn 204: point = 16, n_alt = -1
   Insn 120: point = 16, n_alt = 1
  BB 27
   Insn 202: point = 17, n_alt = -1
   Insn 115: point = 17, n_alt = 1
  BB 26
   Insn 200: point = 18, n_alt = -1
   Insn 110: point = 18, n_alt = 1
  BB 25
   Insn 198: point = 19, n_alt = -1
   Insn 105: point = 19, n_alt = 1
  BB 41
   Insn 185: point = 20, n_alt = 1
  BB 24
   Insn 196: point = 21, n_alt = -1
  BB 23
   Insn 99: point = 21, n_alt = -1
   Insn 98: point = 21, n_alt = 0
  BB 22
   Insn 92: point = 23, n_alt = 0
   Insn 91: point = 25, n_alt = 4
  BB 21
   Insn 89: point = 28, n_alt = -1
   Insn 88: point = 28, n_alt = 0
  BB 20
   Insn 84: point = 29, n_alt = -1
   Insn 83: point = 29, n_alt = 0
  BB 19
   Insn 79: point = 30, n_alt = -1
   Insn 78: point = 30, n_alt = 0
  BB 18
   Insn 74: point = 31, n_alt = -1
   Insn 73: point = 31, n_alt = 0
  BB 17
   Insn 71: point = 32, n_alt = -1
   Insn 70: point = 32, n_alt = 3
  BB 16
   Insn 66: point = 33, n_alt = -1
   Insn 65: point = 33, n_alt = 3
  BB 15
   Insn 63: point = 34, n_alt = -1
   Insn 62: point = 34, n_alt = 3
  BB 14
   Insn 58: point = 35, n_alt = -1
   Insn 57: point = 35, n_alt = 3
  BB 13
   Insn 55: point = 36, n_alt = -1
   Insn 54: point = 36, n_alt = 3
  BB 12
   Insn 50: point = 37, n_alt = -1
   Insn 49: point = 37, n_alt = 3
  BB 11
   Insn 47: point = 38, n_alt = -1
   Insn 46: point = 38, n_alt = 3
  BB 10
   Insn 42: point = 39, n_alt = -1
   Insn 41: point = 39, n_alt = 3
  BB 9
   Insn 39: point = 40, n_alt = -1
   Insn 38: point = 40, n_alt = 3
  BB 8
   Insn 34: point = 41, n_alt = -1
   Insn 33: point = 41, n_alt = 3
  BB 7
   Insn 31: point = 42, n_alt = -1
   Insn 30: point = 42, n_alt = 3
  BB 6
   Insn 26: point = 43, n_alt = -1
   Insn 25: point = 43, n_alt = 3
  BB 5
   Insn 23: point = 44, n_alt = -1
   Insn 22: point = 44, n_alt = 3
  BB 4
   Insn 18: point = 45, n_alt = -1
   Insn 17: point = 45, n_alt = 3
  BB 3
   Insn 15: point = 46, n_alt = -1
   Insn 14: point = 46, n_alt = 3
  BB 2
   Insn 10: point = 47, n_alt = -1
   Insn 9: point = 47, n_alt = 3
   Insn 8: point = 47, n_alt = 1
   Insn 4: point = 48, n_alt = 4
   Insn 3: point = 49, n_alt = 0
   Insn 2: point = 51, n_alt = -2
 r113: [26..47] [21..22]
 r114: [2..20]
 r115: [0..1]
 r116: [50..51]
 r117: [48..49]
 r118: [24..25]
 r121: [23..24]
Compressing live ranges: from 52 to 15 - 28%
Ranges after the compression:
 r113: [9..10] [4..5]
 r114: [2..3]
 r115: [0..1]
 r116: [13..14]
 r117: [11..12]
 r118: [7..8]
 r121: [6..7]

********** Assignment #1: **********

	 Assigning to 121 (cl=GENERAL_REGS, orig=121, freq=1000, tfirst=121, tfreq=1000)...
	   Assign 2 to reload r121 (freq=1000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 8
changing reg in insn 98
changing reg in insn 91
changing reg in insn 88
changing reg in insn 83
changing reg in insn 78
changing reg in insn 73
changing reg in insn 70
changing reg in insn 65
changing reg in insn 62
changing reg in insn 57
changing reg in insn 54
changing reg in insn 49
changing reg in insn 46
changing reg in insn 41
changing reg in insn 38
changing reg in insn 33
changing reg in insn 30
changing reg in insn 25
changing reg in insn 22
changing reg in insn 17
changing reg in insn 14
changing reg in insn 9
changing reg in insn 185
changing reg in insn 180
changing reg in insn 175
changing reg in insn 170
changing reg in insn 165
changing reg in insn 160
changing reg in insn 155
changing reg in insn 150
changing reg in insn 145
changing reg in insn 140
changing reg in insn 135
changing reg in insn 130
changing reg in insn 125
changing reg in insn 120
changing reg in insn 115
changing reg in insn 110
changing reg in insn 105
changing reg in insn 188
changing reg in insn 188
changing reg in insn 192
changing reg in insn 2
changing reg in insn 3
changing reg in insn 4
changing reg in insn 91
changing reg in insn 92
changing reg in insn 92
changing reg in insn 92
deleting insn with uid = 3.
deleting insn with uid = 188.
starting the processing of deferred insns
ending the processing of deferred insns


Get_Pos_CRLH

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={2d} r3={21d,26u} r7={1d,44u} r13={1d,42u} r14={1d} r100={22d,21u} r102={1d,1u} 
;;    total ref usage 189{52d,137u,0e} in 83{83 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 116 117
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 4 2 (set (reg:SI 3 r3 [116])
        (reg:SI 0 r0 [ PinNumber ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":69:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 4 2 5 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 6 [0x6])) [3 PinNumber+0 S2 A16])
        (reg:HI 3 r3 [117])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":69:1 979 {*thumb2_movhi_insn}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 6 [0x6])) [3 PinNumber+0 S2 A16]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 9 8 10 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 32768 [0x8000]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 178)
;;  succ:       3 (FALLTHRU)
;;              40
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 11 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 11 15 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 32768 [0x8000]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 15 14 16 3 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 183)
;;  succ:       4 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 16384 [0x4000]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 18 17 19 4 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 173)
;;  succ:       5 (FALLTHRU)
;;              39
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 19 18 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 19 23 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 16384 [0x4000]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 23 22 24 5 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 183)
;;  succ:       6 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 8192 [0x2000]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 26 25 27 6 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 168)
;;  succ:       7 (FALLTHRU)
;;              38
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 27 26 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 30 27 31 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 8192 [0x2000]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 31 30 32 7 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 183)
;;  succ:       8 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 32 31 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 4096 [0x1000]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 34 33 35 8 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 163)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 163)
;;  succ:       9 (FALLTHRU)
;;              37
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 35 34 38 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 38 35 39 9 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 4096 [0x1000]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 39 38 40 9 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 183)
;;  succ:       10 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 40 39 41 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 2048 [0x800]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 42 41 43 10 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 158)
;;  succ:       11 (FALLTHRU)
;;              36
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 43 42 46 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 46 43 47 11 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 2048 [0x800]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 47 46 48 11 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 183)
;;  succ:       12 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 48 47 49 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 1024 [0x400]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 50 49 51 12 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 153)
;;  succ:       13 (FALLTHRU)
;;              35
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 51 50 54 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 54 51 55 13 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 1024 [0x400]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 55 54 56 13 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 183)
;;  succ:       14 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 56 55 57 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 14 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 512 [0x200]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 58 57 59 14 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 148)
;;  succ:       15 (FALLTHRU)
;;              34
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 59 58 62 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 62 59 63 15 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 512 [0x200]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 63 62 64 15 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 183)
;;  succ:       16 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 64 63 65 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 16 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 256 [0x100]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 66 65 67 16 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 143)
;;  succ:       17 (FALLTHRU)
;;              33
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 67 66 70 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 70 67 71 17 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 256 [0x100]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 71 70 72 17 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 183)
;;  succ:       18 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 72 71 73 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 18 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 128 [0x80]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 74 73 75 18 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 138)
;;  succ:       19 (FALLTHRU)
;;              32
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 75 74 78 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 78 75 79 19 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 128 [0x80]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 79 78 80 19 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 183)
;;  succ:       20 (FALLTHRU)
;;              41
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 80 79 83 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 83 80 84 20 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 32 [0x20]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 84 83 85 20 (set (pc)
        (if_then_else (gt (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 96)
;;  succ:       21 (FALLTHRU)
;;              23
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(note 85 84 88 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 88 85 89 21 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 0 [0]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 89 88 90 21 (set (pc)
        (if_then_else (le (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 183)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 183)
;;  succ:       41
;;              22 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc] 118
(note 90 89 91 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 22 (set (reg:SI 3 r3 [118])
        (plus:SI (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int -1 [0xffffffffffffffff]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 7 {*arm_addsi3}
     (nil))
(jump_insn 92 91 93 22 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [118])
                        (const_int 31 [0x1f]))
                    (mem/u/c:SI (plus:SI (mult:SI (reg:SI 3 r3 [118])
                                (const_int 4 [0x4]))
                            (label_ref:SI 93)) [0  S4 A32])
                    (label_ref:SI 183)))
            (clobber (reg:CC 100 cc))
            (clobber (reg:SI 2 r2 [121]))
            (use (label_ref:SI 93))
        ]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 1007 {*thumb2_casesi_internal}
     (insn_list:REG_LABEL_TARGET 183 (nil))
 -> 93)
;;  succ:       41 [68.4% (adjusted)] 
;;              25 [5.3% (adjusted)] 
;;              26 [5.3% (adjusted)] 
;;              27 [5.3% (adjusted)] 
;;              28 [5.3% (adjusted)] 
;;              29 [5.3% (adjusted)] 
;;              30 [5.3% (adjusted)] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; Insn is not within a basic block
(code_label 93 92 94 22 (nil) [2 uses])
;; Insn is not within a basic block
(jump_table_data 94 93 95 (addr_diff_vec:SI (label_ref:SI 93)
         [
            (label_ref:SI 103)
            (label_ref:SI 108)
            (label_ref:SI 183)
            (label_ref:SI 113)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 118)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 123)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 183)
            (label_ref:SI 128)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 95 94 96)
;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       20
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 113
;; lr  def 	 100 [cc]
(code_label 96 95 97 23 20 (nil) [1 uses])
(note 97 96 98 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 23 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 64 [0x40]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 99 98 195 23 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 273 {arm_cond_branch}
     (nil)
 -> 133)
;;  succ:       24 (FALLTHRU)
;;              31
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 195 99 196 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 196 195 197 24 (set (pc)
        (label_ref 183)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":70:2 284 {*arm_jump}
     (nil)
 -> 183)
;;  succ:       41 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 197 196 103)
;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       22 [5.3% (adjusted)] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 103 197 104 25 27 (nil) [1 uses])
(note 104 103 105 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 198 25 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 0 [0])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":73:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 198 105 199 25 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":73:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 199 198 108)
;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       22 [5.3% (adjusted)] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 108 199 109 26 26 (nil) [1 uses])
(note 109 108 110 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 200 26 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 4 [0x4])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":76:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 200 110 201 26 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":76:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 201 200 113)
;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       22 [5.3% (adjusted)] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 113 201 114 27 25 (nil) [1 uses])
(note 114 113 115 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 202 27 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 8 [0x8])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":79:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 202 115 203 27 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":79:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 203 202 118)
;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       22 [5.3% (adjusted)] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 118 203 119 28 24 (nil) [1 uses])
(note 119 118 120 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 204 28 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 12 [0xc])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":82:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 204 120 205 28 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":82:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 205 204 123)
;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       22 [5.3% (adjusted)] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 123 205 124 29 23 (nil) [1 uses])
(note 124 123 125 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 206 29 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 16 [0x10])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":85:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 206 125 207 29 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":85:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 207 206 128)
;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       22 [5.3% (adjusted)] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 128 207 129 30 21 (nil) [1 uses])
(note 129 128 130 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 208 30 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 20 [0x14])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":88:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 208 130 209 30 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":88:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 209 208 133)
;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       23
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 133 209 134 31 28 (nil) [1 uses])
(note 134 133 135 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 210 31 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 24 [0x18])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":91:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 210 135 211 31 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":91:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 211 210 138)
;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       18
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 138 211 139 32 19 (nil) [1 uses])
(note 139 138 140 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 140 139 212 32 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 28 [0x1c])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":94:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 212 140 213 32 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":94:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 213 212 143)
;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       16
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 143 213 144 33 18 (nil) [1 uses])
(note 144 143 145 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 214 33 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 0 [0])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":97:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 214 145 215 33 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":97:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 215 214 148)
;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 148 215 149 34 17 (nil) [1 uses])
(note 149 148 150 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 216 34 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 4 [0x4])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":100:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 216 150 217 34 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":100:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 217 216 153)
;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       12
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 153 217 154 35 16 (nil) [1 uses])
(note 154 153 155 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 218 35 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 8 [0x8])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":103:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 218 155 219 35 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":103:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 219 218 158)
;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       10
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 158 219 159 36 15 (nil) [1 uses])
(note 159 158 160 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 220 36 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 12 [0xc])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":106:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 220 160 221 36 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":106:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 221 220 163)
;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 163 221 164 37 14 (nil) [1 uses])
(note 164 163 165 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 165 164 222 37 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 16 [0x10])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":109:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 222 165 223 37 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":109:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 223 222 168)
;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 168 223 169 38 13 (nil) [1 uses])
(note 169 168 170 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 224 38 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 20 [0x14])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":112:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 224 170 225 38 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":112:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 225 224 173)
;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 173 225 174 39 12 (nil) [1 uses])
(note 174 173 175 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 226 39 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 24 [0x18])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":115:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 226 175 227 39 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":115:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 227 226 178)
;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 178 227 179 40 10 (nil) [1 uses])
(note 179 178 180 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 228 40 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 28 [0x1c])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":118:10 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 228 180 229 40 (set (pc)
        (label_ref 186)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":118:10 284 {*arm_jump}
     (nil)
 -> 186)
;;  succ:       42 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

(barrier 229 228 183)
;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       22 [68.4% (adjusted)] 
;;              3
;;              5
;;              7
;;              9
;;              11
;;              13
;;              15
;;              17
;;              19
;;              21
;;              24 [always] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114
(code_label 183 229 184 41 11 (nil) [38 uses])
(note 184 183 185 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 41 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (const_int 0 [0])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":122:10 977 {*thumb2_movsi_insn}
     (nil))
;;  succ:       42 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 1, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;;              25 [always] 
;;              26 [always] 
;;              27 [always] 
;;              28 [always] 
;;              29 [always] 
;;              30 [always] 
;;              31 [always] 
;;              32 [always] 
;;              33 [always] 
;;              34 [always] 
;;              35 [always] 
;;              36 [always] 
;;              37 [always] 
;;              38 [always] 
;;              39 [always] 
;;              40 [always] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 114
;; lr  def 	 0 [r0] 115
(code_label 186 185 187 42 29 (nil) [16 uses])
(note 187 186 192 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 192 187 193 42 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:115 <retval> ] [115])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":127:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 193 192 230 42 (use (reg/i:SI 0 r0)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":127:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 230 193 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_Init (MCAL_GPIO_Init, funcdef_no=5, decl_uid=5727, cgraph_uid=6, symbol_order=5)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=12, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=24,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=24,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 3:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 23:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 24:  (0) l  (1) 0  (2) Py {*arm_addsi3}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 27:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 29:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) I {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =l  (1) 0  (2) l {*arm_shiftsi3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =l  (1) l {*arm_one_cmplsi2}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 41
	 Choosing alt 1 in insn 41:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 42:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 43:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 59:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 60:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 65:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 66:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            alt=5: Bad operand -- refuse
            alt=6: Bad operand -- refuse
            alt=8: Bad operand -- refuse
            alt=9: Bad operand -- refuse
          alt=10,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 10 in insn 67:  (0) r  (1) rk  (2) L {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 71
	 Choosing alt 1 in insn 71:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 72:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 73:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 80:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 81:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 82:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 83:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 84:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 85:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 90:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 91:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 95:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 96:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 97:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 100
	 Choosing alt 1 in insn 100:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 101:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 102:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 103:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 104:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 106:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 107:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 108
	 Choosing alt 1 in insn 108:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 109:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 117:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 118:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 119:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 121:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 122:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 127:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 128:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 132:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 133:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 134:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 135:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =l  (1) l {*arm_one_cmplsi2}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 139
	 Choosing alt 1 in insn 139:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 140:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 141:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 142:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 143:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=9,losers=1 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=6,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=9,losers=1 -- refuse
            alt=9: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=10,overall=9,losers=1 -- refuse
            alt=11: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=9,losers=1 -- refuse
            alt=14: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=15,overall=15,losers=1 -- refuse
	 Choosing alt 4 in insn 144:  (0) r  (1) rk  (2) rI {*arm_addsi3}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 146:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 147:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 148
	 Choosing alt 1 in insn 148:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 150:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 157:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 158:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 159:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 161:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 162:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 167:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 168:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 170:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 171:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 172
	 Choosing alt 1 in insn 172:  (0) l  (1) 0  (2) l {*iorsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 173:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 174:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
          alt=0,overall=6,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 181:  (0) r  (1) r  (2) r {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 182:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 183:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 185:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 186:  (0) m  (1) lk*r {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5 6 7 8
EBB 9
EBB 10 11
EBB 12 13
EBB 14
EBB 16
EBB 15

********** Pseudo live ranges #1: **********

  BB 15
  BB 16
   Insn 201: point = 0, n_alt = -1
  BB 11
   Insn 196: point = 0, n_alt = -1
   Insn 122: point = 0, n_alt = 6
   Insn 121: point = 1, n_alt = 5
   Insn 120: point = 2, n_alt = 1
   Insn 119: point = 4, n_alt = 5
   Insn 118: point = 6, n_alt = 5
   Insn 117: point = 7, n_alt = 3
   Insn 116: point = 9, n_alt = -2
   Insn 115: point = 11, n_alt = -2
   Insn 114: point = 13, n_alt = -2
   Insn 113: point = 14, n_alt = -1
   Insn 112: point = 14, n_alt = -2
   Insn 111: point = 15, n_alt = 1
   Insn 110: point = 17, n_alt = 5
   Insn 109: point = 18, n_alt = 0
   Insn 108: point = 20, n_alt = 1
   Insn 107: point = 22, n_alt = 5
   Insn 106: point = 24, n_alt = 5
   Insn 105: point = 25, n_alt = 1
   Insn 104: point = 27, n_alt = 5
   Insn 103: point = 29, n_alt = 5
   Insn 102: point = 30, n_alt = 6
   Insn 101: point = 31, n_alt = 5
   Insn 100: point = 32, n_alt = 1
   Insn 99: point = 34, n_alt = -2
   Insn 98: point = 36, n_alt = 1
   Insn 97: point = 38, n_alt = 5
   Insn 96: point = 39, n_alt = 5
   Insn 95: point = 41, n_alt = 5
  BB 13
   Insn 198: point = 42, n_alt = -1
   Insn 162: point = 42, n_alt = 6
   Insn 161: point = 43, n_alt = 5
   Insn 160: point = 44, n_alt = 1
   Insn 159: point = 46, n_alt = 5
   Insn 158: point = 48, n_alt = 5
   Insn 157: point = 49, n_alt = 3
   Insn 156: point = 51, n_alt = -2
   Insn 155: point = 53, n_alt = -2
   Insn 154: point = 55, n_alt = -2
   Insn 153: point = 56, n_alt = -1
   Insn 152: point = 56, n_alt = -2
   Insn 151: point = 57, n_alt = 1
   Insn 150: point = 59, n_alt = 5
   Insn 149: point = 60, n_alt = 0
   Insn 148: point = 62, n_alt = 1
   Insn 147: point = 64, n_alt = 5
   Insn 146: point = 66, n_alt = 5
   Insn 145: point = 67, n_alt = 1
   Insn 144: point = 69, n_alt = 4
   Insn 143: point = 71, n_alt = 5
   Insn 142: point = 73, n_alt = 5
   Insn 141: point = 74, n_alt = 6
   Insn 140: point = 75, n_alt = 5
   Insn 139: point = 76, n_alt = 1
   Insn 138: point = 78, n_alt = -2
   Insn 137: point = 80, n_alt = 0
   Insn 136: point = 82, n_alt = -2
   Insn 135: point = 84, n_alt = 1
   Insn 134: point = 86, n_alt = 5
   Insn 133: point = 87, n_alt = 5
   Insn 132: point = 89, n_alt = 5
  BB 9
   Insn 194: point = 90, n_alt = -1
   Insn 191: point = 90, n_alt = -1
   Insn 85: point = 90, n_alt = 6
   Insn 84: point = 91, n_alt = 5
   Insn 83: point = 92, n_alt = 1
   Insn 82: point = 94, n_alt = 5
   Insn 81: point = 96, n_alt = 5
   Insn 80: point = 97, n_alt = 3
   Insn 79: point = 99, n_alt = -2
   Insn 78: point = 101, n_alt = -2
   Insn 77: point = 103, n_alt = -2
   Insn 76: point = 104, n_alt = -1
   Insn 75: point = 104, n_alt = -2
   Insn 74: point = 105, n_alt = 1
   Insn 73: point = 107, n_alt = 5
   Insn 72: point = 108, n_alt = 0
   Insn 71: point = 110, n_alt = 1
   Insn 70: point = 112, n_alt = 5
   Insn 69: point = 114, n_alt = 5
   Insn 68: point = 115, n_alt = 1
   Insn 67: point = 117, n_alt = 10
   Insn 66: point = 119, n_alt = 5
   Insn 65: point = 121, n_alt = 5
  BB 14
   Insn 186: point = 122, n_alt = 6
   Insn 185: point = 123, n_alt = 5
   Insn 184: point = 124, n_alt = 1
   Insn 183: point = 126, n_alt = 5
   Insn 182: point = 128, n_alt = 5
   Insn 181: point = 129, n_alt = 3
   Insn 180: point = 131, n_alt = -2
   Insn 179: point = 133, n_alt = -2
   Insn 178: point = 135, n_alt = -2
   Insn 177: point = 136, n_alt = -1
   Insn 176: point = 136, n_alt = -2
   Insn 175: point = 137, n_alt = 1
   Insn 174: point = 139, n_alt = 5
   Insn 173: point = 140, n_alt = 0
   Insn 172: point = 142, n_alt = 1
   Insn 171: point = 144, n_alt = 5
   Insn 170: point = 146, n_alt = 5
   Insn 169: point = 147, n_alt = 1
   Insn 168: point = 149, n_alt = 5
   Insn 167: point = 151, n_alt = 5
  BB 12
   Insn 130: point = 152, n_alt = -1
   Insn 129: point = 152, n_alt = 0
   Insn 128: point = 153, n_alt = 5
   Insn 127: point = 155, n_alt = 5
  BB 10
   Insn 93: point = 156, n_alt = -1
   Insn 92: point = 156, n_alt = 0
   Insn 91: point = 157, n_alt = 5
   Insn 90: point = 159, n_alt = 5
  BB 8
   Insn 62: point = 160, n_alt = -1
   Insn 61: point = 160, n_alt = 0
   Insn 60: point = 161, n_alt = 5
   Insn 59: point = 163, n_alt = 5
  BB 7
   Insn 57: point = 164, n_alt = -1
   Insn 56: point = 164, n_alt = 0
   Insn 55: point = 165, n_alt = 5
   Insn 54: point = 167, n_alt = 5
  BB 6
   Insn 52: point = 168, n_alt = -1
   Insn 51: point = 168, n_alt = 0
   Insn 50: point = 169, n_alt = 5
   Insn 49: point = 171, n_alt = 5
  BB 5
   Insn 47: point = 172, n_alt = -1
   Insn 46: point = 172, n_alt = 0
   Insn 45: point = 173, n_alt = 5
   Insn 44: point = 175, n_alt = 5
   Insn 43: point = 176, n_alt = 6
   Insn 42: point = 177, n_alt = 5
   Insn 41: point = 178, n_alt = 1
   Insn 40: point = 180, n_alt = -2
   Insn 39: point = 182, n_alt = 5
   Insn 38: point = 184, n_alt = 5
   Insn 37: point = 185, n_alt = 0
   Insn 36: point = 187, n_alt = 0
   Insn 35: point = 189, n_alt = 1
   Insn 34: point = 190, n_alt = -2
   Insn 33: point = 192, n_alt = -2
   Insn 32: point = 194, n_alt = -2
   Insn 31: point = 195, n_alt = -1
   Insn 30: point = 195, n_alt = -2
   Insn 29: point = 196, n_alt = 1
   Insn 28: point = 198, n_alt = 5
   Insn 27: point = 199, n_alt = 6
  BB 3
   Insn 192: point = 201, n_alt = -1
   Insn 18: point = 201, n_alt = 5
  BB 4
   Insn 24: point = 202, n_alt = 2
   Insn 23: point = 204, n_alt = 5
  BB 2
   Insn 16: point = 205, n_alt = -1
   Insn 15: point = 205, n_alt = 0
   Insn 10: point = 206, n_alt = 1
   Insn 9: point = 208, n_alt = 5
   Insn 8: point = 209, n_alt = 6
   Insn 7: point = 210, n_alt = 1
   Insn 3: point = 211, n_alt = 6
   Insn 2: point = 211, n_alt = 6
 r113: [205..206]
 r114: [195..196]
 r115: [191..192]
 r116: [188..190]
 r117: [186..187]
 r118: [179..182]
 r119: [179..180]
 r120: [176..178]
 r121: [172..173]
 r122: [168..169]
 r123: [164..165]
 r124: [160..161]
 r125: [118..119]
 r126: [116..117]
 r127: [111..115]
 r128: [111..112]
 r129: [109..110]
 r130: [98..108]
 r131: [104..105]
 r132: [100..101]
 r133: [98..99]
 r134: [93..94]
 r135: [90..92]
 r136: [156..157]
 r137: [33..39]
 r138: [35..36]
 r139: [33..34]
 r140: [30..32]
 r141: [26..27]
 r142: [21..25]
 r143: [21..22]
 r144: [19..20]
 r145: [8..18]
 r146: [14..15]
 r147: [10..11]
 r148: [8..9]
 r149: [3..4]
 r150: [0..2]
 r151: [152..153]
 r152: [77..87]
 r153: [83..84]
 r154: [81..82]
 r155: [79..80]
 r156: [77..78]
 r157: [74..76]
 r158: [70..71]
 r159: [68..69]
 r160: [63..67]
 r161: [63..64]
 r162: [61..62]
 r163: [50..60]
 r164: [56..57]
 r165: [52..53]
 r166: [50..51]
 r167: [45..46]
 r168: [42..44]
 r169: [148..149]
 r170: [143..147]
 r171: [143..144]
 r172: [141..142]
 r173: [130..140]
 r174: [136..137]
 r175: [132..133]
 r176: [130..131]
 r177: [125..126]
 r178: [122..124]
 r179: [199..202]
 r180: [181..185]
 r181: [125..129]
 r182: [45..49]
 r183: [3..7]
 r184: [93..97]
 r185: [209..210]
 r186: [207..208]
 r189: [203..204]
 r190: [197..198]
 r191: [193..194]
 r192: [188..189]
 r193: [183..184]
 r194: [176..177]
 r195: [174..175]
 r196: [170..171]
 r197: [166..167]
 r198: [162..163]
 r199: [120..121]
 r200: [113..114]
 r201: [106..107]
 r202: [102..103]
 r203: [95..96]
 r204: [90..91]
 r205: [158..159]
 r206: [40..41]
 r207: [37..38]
 r208: [30..31]
 r209: [28..29]
 r210: [23..24]
 r211: [16..17]
 r212: [12..13]
 r213: [5..6]
 r214: [0..1]
 r215: [154..155]
 r216: [88..89]
 r217: [85..86]
 r218: [74..75]
 r219: [72..73]
 r220: [65..66]
 r221: [58..59]
 r222: [54..55]
 r223: [47..48]
 r224: [42..43]
 r225: [150..151]
 r226: [145..146]
 r227: [138..139]
 r228: [134..135]
 r229: [127..128]
 r230: [122..123]
Compressing live ranges: from 211 to 186 - 88%
Ranges after the compression:
 r113: [180..181]
 r114: [172..173]
 r115: [168..169]
 r116: [166..167]
 r117: [164..165]
 r118: [158..161]
 r119: [158..159]
 r120: [156..157]
 r121: [152..153]
 r122: [148..149]
 r123: [144..145]
 r124: [140..141]
 r125: [102..103]
 r126: [100..101]
 r127: [96..99]
 r128: [96..97]
 r129: [94..95]
 r130: [84..93]
 r131: [90..91]
 r132: [86..87]
 r133: [84..85]
 r134: [80..81]
 r135: [78..79]
 r136: [136..137]
 r137: [28..33]
 r138: [30..31]
 r139: [28..29]
 r140: [26..27]
 r141: [22..23]
 r142: [18..21]
 r143: [18..19]
 r144: [16..17]
 r145: [6..15]
 r146: [12..13]
 r147: [8..9]
 r148: [6..7]
 r149: [2..3]
 r150: [0..1]
 r151: [132..133]
 r152: [66..75]
 r153: [72..73]
 r154: [70..71]
 r155: [68..69]
 r156: [66..67]
 r157: [64..65]
 r158: [60..61]
 r159: [58..59]
 r160: [54..57]
 r161: [54..55]
 r162: [52..53]
 r163: [42..51]
 r164: [48..49]
 r165: [44..45]
 r166: [42..43]
 r167: [38..39]
 r168: [36..37]
 r169: [128..129]
 r170: [124..127]
 r171: [124..125]
 r172: [122..123]
 r173: [112..121]
 r174: [118..119]
 r175: [114..115]
 r176: [112..113]
 r177: [108..109]
 r178: [106..107]
 r179: [176..177]
 r180: [160..163]
 r181: [108..111]
 r182: [38..41]
 r183: [2..5]
 r184: [80..83]
 r185: [184..185]
 r186: [182..183]
 r189: [178..179]
 r190: [174..175]
 r191: [170..171]
 r192: [166..167]
 r193: [162..163]
 r194: [156..157]
 r195: [154..155]
 r196: [150..151]
 r197: [146..147]
 r198: [142..143]
 r199: [104..105]
 r200: [98..99]
 r201: [92..93]
 r202: [88..89]
 r203: [82..83]
 r204: [78..79]
 r205: [138..139]
 r206: [34..35]
 r207: [32..33]
 r208: [26..27]
 r209: [24..25]
 r210: [20..21]
 r211: [14..15]
 r212: [10..11]
 r213: [4..5]
 r214: [0..1]
 r215: [134..135]
 r216: [76..77]
 r217: [74..75]
 r218: [64..65]
 r219: [62..63]
 r220: [56..57]
 r221: [50..51]
 r222: [46..47]
 r223: [40..41]
 r224: [36..37]
 r225: [130..131]
 r226: [126..127]
 r227: [120..121]
 r228: [116..117]
 r229: [110..111]
 r230: [106..107]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=32, prev_offset=0)
Can't eliminate 103 to 102 (offset=16, prev_offset=0)
Can't eliminate 103 to 11 (offset=12, prev_offset=0)
Can eliminate 103 to 7 (offset=32, prev_offset=32)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 10
changing reg in insn 15
changing reg in insn 29
changing reg in insn 30
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 43
changing reg in insn 45
changing reg in insn 46
changing reg in insn 50
changing reg in insn 51
changing reg in insn 55
changing reg in insn 56
changing reg in insn 60
changing reg in insn 61
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 72
changing reg in insn 80
changing reg in insn 74
changing reg in insn 75
changing reg in insn 78
changing reg in insn 79
changing reg in insn 79
changing reg in insn 80
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 85
changing reg in insn 91
changing reg in insn 92
changing reg in insn 96
changing reg in insn 98
changing reg in insn 99
changing reg in insn 99
changing reg in insn 100
changing reg in insn 102
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 117
changing reg in insn 111
changing reg in insn 112
changing reg in insn 115
changing reg in insn 116
changing reg in insn 116
changing reg in insn 117
changing reg in insn 119
changing reg in insn 120
changing reg in insn 120
changing reg in insn 122
changing reg in insn 128
changing reg in insn 129
changing reg in insn 133
changing reg in insn 135
changing reg in insn 136
changing reg in insn 136
changing reg in insn 137
changing reg in insn 137
changing reg in insn 138
changing reg in insn 138
changing reg in insn 139
changing reg in insn 141
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 145
changing reg in insn 145
changing reg in insn 147
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 157
changing reg in insn 151
changing reg in insn 152
changing reg in insn 155
changing reg in insn 156
changing reg in insn 156
changing reg in insn 157
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 162
changing reg in insn 168
changing reg in insn 169
changing reg in insn 169
changing reg in insn 171
changing reg in insn 172
changing reg in insn 173
changing reg in insn 173
changing reg in insn 181
changing reg in insn 175
changing reg in insn 176
changing reg in insn 179
changing reg in insn 180
changing reg in insn 180
changing reg in insn 181
changing reg in insn 183
changing reg in insn 184
changing reg in insn 184
changing reg in insn 186
changing reg in insn 24
changing reg in insn 18
changing reg in insn 27
changing reg in insn 37
changing reg in insn 40
changing reg in insn 181
changing reg in insn 184
changing reg in insn 157
changing reg in insn 160
changing reg in insn 117
changing reg in insn 120
changing reg in insn 80
changing reg in insn 83
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 23
changing reg in insn 24
changing reg in insn 28
changing reg in insn 29
changing reg in insn 32
changing reg in insn 33
changing reg in insn 35
changing reg in insn 36
changing reg in insn 38
changing reg in insn 39
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 49
changing reg in insn 50
changing reg in insn 54
changing reg in insn 55
changing reg in insn 59
changing reg in insn 60
changing reg in insn 65
changing reg in insn 66
changing reg in insn 69
changing reg in insn 70
changing reg in insn 73
changing reg in insn 74
changing reg in insn 77
changing reg in insn 78
changing reg in insn 81
changing reg in insn 82
changing reg in insn 84
changing reg in insn 85
changing reg in insn 90
changing reg in insn 91
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 106
changing reg in insn 107
changing reg in insn 110
changing reg in insn 111
changing reg in insn 114
changing reg in insn 115
changing reg in insn 118
changing reg in insn 119
changing reg in insn 121
changing reg in insn 122
changing reg in insn 127
changing reg in insn 128
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 140
changing reg in insn 141
changing reg in insn 142
changing reg in insn 143
changing reg in insn 146
changing reg in insn 147
changing reg in insn 150
changing reg in insn 151
changing reg in insn 154
changing reg in insn 155
changing reg in insn 158
changing reg in insn 159
changing reg in insn 161
changing reg in insn 162
changing reg in insn 167
changing reg in insn 168
changing reg in insn 170
changing reg in insn 171
changing reg in insn 174
changing reg in insn 175
changing reg in insn 178
changing reg in insn 179
changing reg in insn 182
changing reg in insn 183
changing reg in insn 185
changing reg in insn 186
deleting insn with uid = 33.
deleting insn with uid = 40.
deleting insn with uid = 78.
deleting insn with uid = 79.
deleting insn with uid = 99.
deleting insn with uid = 115.
deleting insn with uid = 116.
deleting insn with uid = 136.
deleting insn with uid = 138.
deleting insn with uid = 155.
deleting insn with uid = 156.
deleting insn with uid = 179.
deleting insn with uid = 180.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 177.


MCAL_GPIO_Init

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={11d,11u} r1={6d,1u} r2={28d,22u} r3={84d,77u} r4={4d,4u} r7={1d,58u} r12={10d} r13={1d,21u} r14={6d} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={12d,7u} r101={5d} r102={1d,1u} r104={5d} r105={5d} r106={5d} 
;;    total ref usage 811{609d,202u,0e} in 145{140 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 185 186
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])
        (reg:SI 0 r0 [ GPIOx ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":140:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])
        (reg:SI 1 r1 [ PinConfig ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":140:1 977 {*thumb2_movsi_insn}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 3 r3 [185])
        (const_int 0 [0])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":142:21 977 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])
        (reg:SI 3 r3 [185])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":142:21 977 {*thumb2_movsi_insn}
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 3 r3 [186])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":144:25 977 {*thumb2_movsi_insn}
     (nil))
(insn 10 9 15 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [186]) [3 PinConfig_71(D)->GPIO_PinNumber+0 S2 A32]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":144:25 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 15 10 16 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:113 _1 ] [113])
            (const_int 255 [0xff]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":144:72 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":144:72 273 {arm_cond_branch}
     (nil)
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 179
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 192 3 (set (reg/f:SI 3 r3 [orig:179 iftmp.0_67 ] [179])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":144:72 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 192 18 193 3 (set (pc)
        (label_ref 25)) 284 {*arm_jump}
     (nil)
 -> 25)
;;  succ:       5 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 179

(barrier 193 192 21)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 179 189
(code_label 21 193 22 4 31 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg:SI 3 r3 [189])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":144:72 977 {*thumb2_movsi_insn}
     (nil))
(insn 24 23 25 4 (set (reg/f:SI 3 r3 [orig:179 iftmp.0_67 ] [179])
        (plus:SI (reg:SI 3 r3 [189])
            (const_int 4 [0x4]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":144:72 7 {*arm_addsi3}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 179

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 179
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 179
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 114 115 116 117 118 119 120 121 180 190 191 192 193 194 195
(code_label 25 24 26 5 32 (nil) [1 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])
        (reg/f:SI 3 r3 [orig:179 iftmp.0_67 ] [179])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":144:13 977 {*thumb2_movsi_insn}
     (nil))
(insn 28 27 29 5 (set (reg/f:SI 3 r3 [190])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:26 977 {*thumb2_movsi_insn}
     (nil))
(insn 29 28 30 5 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [190]) [3 PinConfig_71(D)->GPIO_PinNumber+0 S2 A32]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:26 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 30 29 31 5 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:114 _2 ] [114])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:26 977 {*thumb2_movsi_insn}
     (nil))
(call_insn 31 30 32 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("Get_Pos_CRLH") [flags 0x3]  <function_decl 0000000005da3700 Get_Pos_CRLH>) [0 Get_Pos_CRLH S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:26 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (nil))))
(insn 32 31 34 5 (set (reg:SI 3 r3 [191])
        (reg:SI 0 r0)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:26 977 {*thumb2_movsi_insn}
     (nil))
(insn 34 32 35 5 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (reg:SI 3 r3 [orig:115 _3 ] [115])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:26 977 {*thumb2_movsi_insn}
     (nil))
(insn 35 34 36 5 (set (reg:SI 3 r3 [192])
        (const_int 15 [0xf])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:23 977 {*thumb2_movsi_insn}
     (nil))
(insn 36 35 37 5 (set (reg:SI 3 r3 [orig:117 _5 ] [117])
        (ashift:SI (reg:SI 3 r3 [192])
            (reg:SI 2 r2 [orig:116 _4 ] [116]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:23 147 {*arm_shiftsi3}
     (nil))
(insn 37 36 38 5 (set (reg:SI 2 r2 [orig:180 _77 ] [180])
        (not:SI (reg:SI 3 r3 [orig:117 _5 ] [117]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:17 169 {*arm_one_cmplsi2}
     (nil))
(insn 38 37 39 5 (set (reg/f:SI 3 r3 [193])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 39 38 41 5 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem/v:SI (reg/f:SI 3 r3 [193]) [1 *Reg_Config_75+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 41 39 42 5 (set (reg:SI 2 r2 [orig:120 _8 ] [120])
        (and:SI (reg:SI 2 r2 [orig:119 _7 ] [119])
            (reg:SI 3 r3 [orig:118 _6 ] [118]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:14 90 {*arm_andsi3_insn}
     (nil))
(insn 42 41 43 5 (set (reg/f:SI 3 r3 [194])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 43 42 44 5 (set (mem/v:SI (reg/f:SI 3 r3 [194]) [1 *Reg_Config_75+0 S4 A32])
        (reg:SI 2 r2 [orig:120 _8 ] [120])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":145:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 44 43 45 5 (set (reg/f:SI 3 r3 [195])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":148:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 45 44 46 5 (set (reg:SI 3 r3 [orig:121 _9 ] [121])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [195])
                (const_int 4 [0x4])) [1 PinConfig_71(D)->GPIO_Mode+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":148:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 46 45 47 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:121 _9 ] [121])
            (const_int 4 [0x4]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":148:4 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 47 46 48 5 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":148:4 273 {arm_cond_branch}
     (nil)
 -> 63)
;;  succ:       9
;;              6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 122 196
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg/f:SI 3 r3 [196])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":148:66 977 {*thumb2_movsi_insn}
     (nil))
(insn 50 49 51 6 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [196])
                (const_int 4 [0x4])) [1 PinConfig_71(D)->GPIO_Mode+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":148:66 977 {*thumb2_movsi_insn}
     (nil))
(insn 51 50 52 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 5 [0x5]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":148:53 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 52 51 53 6 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":148:53 273 {arm_cond_branch}
     (nil)
 -> 63)
;;  succ:       9
;;              7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 123 197
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg/f:SI 3 r3 [197])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":149:13 977 {*thumb2_movsi_insn}
     (nil))
(insn 55 54 56 7 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [197])
                (const_int 4 [0x4])) [1 PinConfig_71(D)->GPIO_Mode+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":149:13 977 {*thumb2_movsi_insn}
     (nil))
(insn 56 55 57 7 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:123 _11 ] [123])
            (const_int 6 [0x6]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":148:106 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 57 56 58 7 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":148:106 273 {arm_cond_branch}
     (nil)
 -> 63)
;;  succ:       9
;;              8 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 124 198
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg/f:SI 3 r3 [198])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":149:68 977 {*thumb2_movsi_insn}
     (nil))
(insn 60 59 61 8 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [198])
                (const_int 4 [0x4])) [1 PinConfig_71(D)->GPIO_Mode+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":149:68 977 {*thumb2_movsi_insn}
     (nil))
(insn 61 60 62 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:124 _12 ] [124])
            (const_int 7 [0x7]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":149:55 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 62 61 63 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 88)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":149:55 273 {arm_cond_branch}
     (nil)
 -> 88)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       5
;;              6
;;              7
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 125 126 127 128 129 130 131 132 133 134 135 184 199 200 201 202 203 204
(code_label 63 62 64 9 33 (nil) [3 uses])
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 9 (set (reg/f:SI 3 r3 [199])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:32 977 {*thumb2_movsi_insn}
     (nil))
(insn 66 65 67 9 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [199])
                (const_int 4 [0x4])) [1 PinConfig_71(D)->GPIO_Mode+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:32 977 {*thumb2_movsi_insn}
     (nil))
(insn 67 66 68 9 (set (reg:SI 3 r3 [orig:126 _14 ] [126])
        (plus:SI (reg:SI 3 r3 [orig:125 _13 ] [125])
            (const_int -4 [0xfffffffffffffffc]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:44 7 {*arm_addsi3}
     (nil))
(insn 68 67 69 9 (set (reg:SI 2 r2 [orig:127 _15 ] [127])
        (ashift:SI (reg:SI 3 r3 [orig:126 _14 ] [126])
            (const_int 2 [0x2]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:49 147 {*arm_shiftsi3}
     (nil))
(insn 69 68 70 9 (set (reg/f:SI 3 r3 [200])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:66 977 {*thumb2_movsi_insn}
     (nil))
(insn 70 69 71 9 (set (reg:SI 3 r3 [orig:128 _16 ] [128])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [200])
                (const_int 8 [0x8])) [1 PinConfig_71(D)->GPIO_Speed+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:66 977 {*thumb2_movsi_insn}
     (nil))
(insn 71 70 72 9 (set (reg:SI 3 r3 [orig:129 _17 ] [129])
        (ior:SI (reg:SI 3 r3 [orig:128 _16 ] [128])
            (reg:SI 2 r2 [orig:127 _15 ] [127]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:55 106 {*iorsi3_insn}
     (nil))
(insn 72 71 73 9 (set (reg:SI 4 r4 [orig:130 _18 ] [130])
        (and:SI (reg:SI 3 r3 [orig:129 _17 ] [129])
            (const_int 15 [0xf]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:81 90 {*arm_andsi3_insn}
     (nil))
(insn 73 72 74 9 (set (reg/f:SI 3 r3 [201])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:94 977 {*thumb2_movsi_insn}
     (nil))
(insn 74 73 75 9 (set (reg:SI 3 r3 [orig:131 _19 ] [131])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [201]) [3 PinConfig_71(D)->GPIO_PinNumber+0 S2 A32]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:94 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 75 74 76 9 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:131 _19 ] [131])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:94 977 {*thumb2_movsi_insn}
     (nil))
(call_insn 76 75 77 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("Get_Pos_CRLH") [flags 0x3]  <function_decl 0000000005da3700 Get_Pos_CRLH>) [0 Get_Pos_CRLH S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:94 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (nil))))
(insn 77 76 80 9 (set (reg:SI 3 r3 [202])
        (reg:SI 0 r0)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:94 977 {*thumb2_movsi_insn}
     (nil))
(insn 80 77 81 9 (set (reg:SI 2 r2 [orig:184 _91 ] [184])
        (ashift:SI (reg:SI 4 r4 [orig:130 _18 ] [130])
            (reg:SI 3 r3 [orig:133 _21 ] [133]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:91 147 {*arm_shiftsi3}
     (nil))
(insn 81 80 82 9 (set (reg/f:SI 3 r3 [203])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 82 81 83 9 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (mem/v:SI (reg/f:SI 3 r3 [203]) [1 *Reg_Config_75+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 83 82 84 9 (set (reg:SI 2 r2 [orig:135 _23 ] [135])
        (ior:SI (reg:SI 2 r2 [orig:184 _91 ] [184])
            (reg:SI 3 r3 [orig:134 _22 ] [134]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:15 106 {*iorsi3_insn}
     (nil))
(insn 84 83 85 9 (set (reg/f:SI 3 r3 [204])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 85 84 191 9 (set (mem/v:SI (reg/f:SI 3 r3 [204]) [1 *Reg_Config_75+0 S4 A32])
        (reg:SI 2 r2 [orig:135 _23 ] [135])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 191 85 194 9 (const_int 0 [0]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":151:3 311 {nop}
     (nil))
(jump_insn 194 191 195 9 (set (pc)
        (label_ref:SI 202)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":180:1 284 {*arm_jump}
     (nil)
 -> 202)
;;  succ:       16 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 195 194 88)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 136 205
(code_label 88 195 89 10 34 (nil) [1 uses])
(note 89 88 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 10 (set (reg/f:SI 3 r3 [205])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":159:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 91 90 92 10 (set (reg:SI 3 r3 [orig:136 _24 ] [136])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [205])
                (const_int 4 [0x4])) [1 PinConfig_71(D)->GPIO_Mode+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":159:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 92 91 93 10 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:136 _24 ] [136])
            (const_int 2 [0x2]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":159:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 93 92 94 10 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":159:5 273 {arm_cond_branch}
     (nil)
 -> 125)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 137 138 139 140 141 142 143 144 145 146 147 148 149 150 183 206 207 208 209 210 211 212 213 214
(note 94 93 95 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 11 (set (reg/f:SI 3 r3 [206])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":161:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 96 95 97 11 (set (reg:SI 3 r3 [orig:137 _25 ] [137])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [206])
                (const_int 12 [0xc])) [1 GPIOx_72(D)->ODR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":161:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 97 96 98 11 (set (reg/f:SI 2 r2 [207])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":161:27 977 {*thumb2_movsi_insn}
     (nil))
(insn 98 97 100 11 (set (reg:SI 2 r2 [orig:138 _26 ] [138])
        (zero_extend:SI (mem:HI (reg/f:SI 2 r2 [207]) [3 PinConfig_71(D)->GPIO_PinNumber+0 S2 A32]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":161:27 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 100 98 101 11 (set (reg:SI 2 r2 [orig:140 _28 ] [140])
        (ior:SI (reg:SI 2 r2 [orig:139 _27 ] [139])
            (reg:SI 3 r3 [orig:137 _25 ] [137]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":161:15 106 {*iorsi3_insn}
     (nil))
(insn 101 100 102 11 (set (reg/f:SI 3 r3 [208])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":161:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 102 101 103 11 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [208])
                (const_int 12 [0xc])) [1 GPIOx_72(D)->ODR+0 S4 A32])
        (reg:SI 2 r2 [orig:140 _28 ] [140])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":161:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 103 102 104 11 (set (reg/f:SI 3 r3 [209])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:33 977 {*thumb2_movsi_insn}
     (nil))
(insn 104 103 105 11 (set (reg:SI 3 r3 [orig:141 _29 ] [141])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [209])
                (const_int 4 [0x4])) [1 PinConfig_71(D)->GPIO_Mode+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:33 977 {*thumb2_movsi_insn}
     (nil))
(insn 105 104 106 11 (set (reg:SI 2 r2 [orig:142 _30 ] [142])
        (ashift:SI (reg:SI 3 r3 [orig:141 _29 ] [141])
            (const_int 2 [0x2]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:46 147 {*arm_shiftsi3}
     (nil))
(insn 106 105 107 11 (set (reg/f:SI 3 r3 [210])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:63 977 {*thumb2_movsi_insn}
     (nil))
(insn 107 106 108 11 (set (reg:SI 3 r3 [orig:143 _31 ] [143])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [210])
                (const_int 8 [0x8])) [1 PinConfig_71(D)->GPIO_Speed+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:63 977 {*thumb2_movsi_insn}
     (nil))
(insn 108 107 109 11 (set (reg:SI 3 r3 [orig:144 _32 ] [144])
        (ior:SI (reg:SI 3 r3 [orig:143 _31 ] [143])
            (reg:SI 2 r2 [orig:142 _30 ] [142]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:52 106 {*iorsi3_insn}
     (nil))
(insn 109 108 110 11 (set (reg:SI 4 r4 [orig:145 _33 ] [145])
        (and:SI (reg:SI 3 r3 [orig:144 _32 ] [144])
            (const_int 15 [0xf]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:78 90 {*arm_andsi3_insn}
     (nil))
(insn 110 109 111 11 (set (reg/f:SI 3 r3 [211])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:91 977 {*thumb2_movsi_insn}
     (nil))
(insn 111 110 112 11 (set (reg:SI 3 r3 [orig:146 _34 ] [146])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [211]) [3 PinConfig_71(D)->GPIO_PinNumber+0 S2 A32]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:91 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 112 111 113 11 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:146 _34 ] [146])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:91 977 {*thumb2_movsi_insn}
     (nil))
(call_insn 113 112 114 11 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("Get_Pos_CRLH") [flags 0x3]  <function_decl 0000000005da3700 Get_Pos_CRLH>) [0 Get_Pos_CRLH S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:91 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (nil))))
(insn 114 113 117 11 (set (reg:SI 3 r3 [212])
        (reg:SI 0 r0)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:91 977 {*thumb2_movsi_insn}
     (nil))
(insn 117 114 118 11 (set (reg:SI 2 r2 [orig:183 _88 ] [183])
        (ashift:SI (reg:SI 4 r4 [orig:145 _33 ] [145])
            (reg:SI 3 r3 [orig:148 _36 ] [148]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:88 147 {*arm_shiftsi3}
     (nil))
(insn 118 117 119 11 (set (reg/f:SI 3 r3 [213])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:16 977 {*thumb2_movsi_insn}
     (nil))
(insn 119 118 120 11 (set (reg:SI 3 r3 [orig:149 _37 ] [149])
        (mem/v:SI (reg/f:SI 3 r3 [213]) [1 *Reg_Config_75+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:16 977 {*thumb2_movsi_insn}
     (nil))
(insn 120 119 121 11 (set (reg:SI 2 r2 [orig:150 _38 ] [150])
        (ior:SI (reg:SI 2 r2 [orig:183 _88 ] [183])
            (reg:SI 3 r3 [orig:149 _37 ] [149]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:16 106 {*iorsi3_insn}
     (nil))
(insn 121 120 122 11 (set (reg/f:SI 3 r3 [214])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:16 977 {*thumb2_movsi_insn}
     (nil))
(insn 122 121 196 11 (set (mem/v:SI (reg/f:SI 3 r3 [214]) [1 *Reg_Config_75+0 S4 A32])
        (reg:SI 2 r2 [orig:150 _38 ] [150])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":162:16 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 196 122 197 11 (set (pc)
        (label_ref:SI 202)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":180:1 284 {*arm_jump}
     (nil)
 -> 202)
;;  succ:       16 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 197 196 125)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       10
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 151 215
(code_label 125 197 126 12 36 (nil) [1 uses])
(note 126 125 127 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 12 (set (reg/f:SI 3 r3 [215])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":165:21 977 {*thumb2_movsi_insn}
     (nil))
(insn 128 127 129 12 (set (reg:SI 3 r3 [orig:151 _39 ] [151])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [215])
                (const_int 4 [0x4])) [1 PinConfig_71(D)->GPIO_Mode+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":165:21 977 {*thumb2_movsi_insn}
     (nil))
(insn 129 128 130 12 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:151 _39 ] [151])
            (const_int 3 [0x3]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":165:11 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 130 129 131 12 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":165:11 273 {arm_cond_branch}
     (nil)
 -> 165)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 182 216 217 218 219 220 221 222 223 224
(note 131 130 132 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 13 (set (reg/f:SI 3 r3 [216])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":167:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 133 132 134 13 (set (reg:SI 3 r3 [orig:152 _40 ] [152])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [216])
                (const_int 12 [0xc])) [1 GPIOx_72(D)->ODR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":167:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 134 133 135 13 (set (reg/f:SI 2 r2 [217])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":167:29 977 {*thumb2_movsi_insn}
     (nil))
(insn 135 134 137 13 (set (reg:SI 2 r2 [orig:153 _41 ] [153])
        (zero_extend:SI (mem:HI (reg/f:SI 2 r2 [217]) [3 PinConfig_71(D)->GPIO_PinNumber+0 S2 A32]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":167:29 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 137 135 139 13 (set (reg:SI 2 r2 [orig:155 _43 ] [155])
        (not:SI (reg:SI 2 r2 [orig:154 _42 ] [154]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":167:18 169 {*arm_one_cmplsi2}
     (nil))
(insn 139 137 140 13 (set (reg:SI 2 r2 [orig:157 _45 ] [157])
        (and:SI (reg:SI 2 r2 [orig:156 _44 ] [156])
            (reg:SI 3 r3 [orig:152 _40 ] [152]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":167:15 90 {*arm_andsi3_insn}
     (nil))
(insn 140 139 141 13 (set (reg/f:SI 3 r3 [218])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":167:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 141 140 142 13 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [218])
                (const_int 12 [0xc])) [1 GPIOx_72(D)->ODR+0 S4 A32])
        (reg:SI 2 r2 [orig:157 _45 ] [157])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":167:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 142 141 143 13 (set (reg/f:SI 3 r3 [219])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:33 977 {*thumb2_movsi_insn}
     (nil))
(insn 143 142 144 13 (set (reg:SI 3 r3 [orig:158 _46 ] [158])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [219])
                (const_int 4 [0x4])) [1 PinConfig_71(D)->GPIO_Mode+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:33 977 {*thumb2_movsi_insn}
     (nil))
(insn 144 143 145 13 (set (reg:SI 3 r3 [orig:159 _47 ] [159])
        (plus:SI (reg:SI 3 r3 [orig:158 _46 ] [158])
            (const_int -1 [0xffffffffffffffff]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:45 7 {*arm_addsi3}
     (nil))
(insn 145 144 146 13 (set (reg:SI 2 r2 [orig:160 _48 ] [160])
        (ashift:SI (reg:SI 3 r3 [orig:159 _47 ] [159])
            (const_int 2 [0x2]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:50 147 {*arm_shiftsi3}
     (nil))
(insn 146 145 147 13 (set (reg/f:SI 3 r3 [220])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:67 977 {*thumb2_movsi_insn}
     (nil))
(insn 147 146 148 13 (set (reg:SI 3 r3 [orig:161 _49 ] [161])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [220])
                (const_int 8 [0x8])) [1 PinConfig_71(D)->GPIO_Speed+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:67 977 {*thumb2_movsi_insn}
     (nil))
(insn 148 147 149 13 (set (reg:SI 3 r3 [orig:162 _50 ] [162])
        (ior:SI (reg:SI 3 r3 [orig:161 _49 ] [161])
            (reg:SI 2 r2 [orig:160 _48 ] [160]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:56 106 {*iorsi3_insn}
     (nil))
(insn 149 148 150 13 (set (reg:SI 4 r4 [orig:163 _51 ] [163])
        (and:SI (reg:SI 3 r3 [orig:162 _50 ] [162])
            (const_int 15 [0xf]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:82 90 {*arm_andsi3_insn}
     (nil))
(insn 150 149 151 13 (set (reg/f:SI 3 r3 [221])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:95 977 {*thumb2_movsi_insn}
     (nil))
(insn 151 150 152 13 (set (reg:SI 3 r3 [orig:164 _52 ] [164])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [221]) [3 PinConfig_71(D)->GPIO_PinNumber+0 S2 A32]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:95 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 152 151 153 13 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:164 _52 ] [164])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:95 977 {*thumb2_movsi_insn}
     (nil))
(call_insn 153 152 154 13 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("Get_Pos_CRLH") [flags 0x3]  <function_decl 0000000005da3700 Get_Pos_CRLH>) [0 Get_Pos_CRLH S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:95 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (nil))))
(insn 154 153 157 13 (set (reg:SI 3 r3 [222])
        (reg:SI 0 r0)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:95 977 {*thumb2_movsi_insn}
     (nil))
(insn 157 154 158 13 (set (reg:SI 2 r2 [orig:182 _84 ] [182])
        (ashift:SI (reg:SI 4 r4 [orig:163 _51 ] [163])
            (reg:SI 3 r3 [orig:166 _54 ] [166]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:92 147 {*arm_shiftsi3}
     (nil))
(insn 158 157 159 13 (set (reg/f:SI 3 r3 [223])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:16 977 {*thumb2_movsi_insn}
     (nil))
(insn 159 158 160 13 (set (reg:SI 3 r3 [orig:167 _55 ] [167])
        (mem/v:SI (reg/f:SI 3 r3 [223]) [1 *Reg_Config_75+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:16 977 {*thumb2_movsi_insn}
     (nil))
(insn 160 159 161 13 (set (reg:SI 2 r2 [orig:168 _56 ] [168])
        (ior:SI (reg:SI 2 r2 [orig:182 _84 ] [182])
            (reg:SI 3 r3 [orig:167 _55 ] [167]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:16 106 {*iorsi3_insn}
     (nil))
(insn 161 160 162 13 (set (reg/f:SI 3 r3 [224])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:16 977 {*thumb2_movsi_insn}
     (nil))
(insn 162 161 198 13 (set (mem/v:SI (reg/f:SI 3 r3 [224]) [1 *Reg_Config_75+0 S4 A32])
        (reg:SI 2 r2 [orig:168 _56 ] [168])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":168:16 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 198 162 199 13 (set (pc)
        (label_ref:SI 202)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":180:1 284 {*arm_jump}
     (nil)
 -> 202)
;;  succ:       16 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 199 198 165)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 16, flags: (RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 169 170 171 172 173 174 175 176 177 178 181 225 226 227 228 229 230
(code_label 165 199 166 14 37 (nil) [1 uses])
(note 166 165 167 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 14 (set (reg/f:SI 3 r3 [225])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:33 977 {*thumb2_movsi_insn}
     (nil))
(insn 168 167 169 14 (set (reg:SI 3 r3 [orig:169 _57 ] [169])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [225])
                (const_int 4 [0x4])) [1 PinConfig_71(D)->GPIO_Mode+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:33 977 {*thumb2_movsi_insn}
     (nil))
(insn 169 168 170 14 (set (reg:SI 2 r2 [orig:170 _58 ] [170])
        (ashift:SI (reg:SI 3 r3 [orig:169 _57 ] [169])
            (const_int 2 [0x2]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:46 147 {*arm_shiftsi3}
     (nil))
(insn 170 169 171 14 (set (reg/f:SI 3 r3 [226])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:63 977 {*thumb2_movsi_insn}
     (nil))
(insn 171 170 172 14 (set (reg:SI 3 r3 [orig:171 _59 ] [171])
        (mem:SI (plus:SI (reg/f:SI 3 r3 [226])
                (const_int 8 [0x8])) [1 PinConfig_71(D)->GPIO_Speed+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:63 977 {*thumb2_movsi_insn}
     (nil))
(insn 172 171 173 14 (set (reg:SI 3 r3 [orig:172 _60 ] [172])
        (ior:SI (reg:SI 3 r3 [orig:171 _59 ] [171])
            (reg:SI 2 r2 [orig:170 _58 ] [170]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:52 106 {*iorsi3_insn}
     (nil))
(insn 173 172 174 14 (set (reg:SI 4 r4 [orig:173 _61 ] [173])
        (and:SI (reg:SI 3 r3 [orig:172 _60 ] [172])
            (const_int 15 [0xf]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:78 90 {*arm_andsi3_insn}
     (nil))
(insn 174 173 175 14 (set (reg/f:SI 3 r3 [227])
        (mem/f/c:SI (reg/f:SI 7 r7) [9 PinConfig+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:91 977 {*thumb2_movsi_insn}
     (nil))
(insn 175 174 176 14 (set (reg:SI 3 r3 [orig:174 _62 ] [174])
        (zero_extend:SI (mem:HI (reg/f:SI 3 r3 [227]) [3 PinConfig_71(D)->GPIO_PinNumber+0 S2 A32]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:91 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 176 175 177 14 (set (reg:SI 0 r0)
        (reg:SI 3 r3 [orig:174 _62 ] [174])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:91 977 {*thumb2_movsi_insn}
     (nil))
(call_insn 177 176 178 14 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("Get_Pos_CRLH") [flags 0x3]  <function_decl 0000000005da3700 Get_Pos_CRLH>) [0 Get_Pos_CRLH S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:91 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (expr_list:HI (use (reg:SI 0 r0))
            (nil))))
(insn 178 177 181 14 (set (reg:SI 3 r3 [228])
        (reg:SI 0 r0)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:91 977 {*thumb2_movsi_insn}
     (nil))
(insn 181 178 182 14 (set (reg:SI 2 r2 [orig:181 _80 ] [181])
        (ashift:SI (reg:SI 4 r4 [orig:173 _61 ] [173])
            (reg:SI 3 r3 [orig:176 _64 ] [176]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:88 147 {*arm_shiftsi3}
     (nil))
(insn 182 181 183 14 (set (reg/f:SI 3 r3 [229])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:16 977 {*thumb2_movsi_insn}
     (nil))
(insn 183 182 184 14 (set (reg:SI 3 r3 [orig:177 _65 ] [177])
        (mem/v:SI (reg/f:SI 3 r3 [229]) [1 *Reg_Config_75+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:16 977 {*thumb2_movsi_insn}
     (nil))
(insn 184 183 185 14 (set (reg:SI 2 r2 [orig:178 _66 ] [178])
        (ior:SI (reg:SI 2 r2 [orig:181 _80 ] [181])
            (reg:SI 3 r3 [orig:177 _65 ] [177]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:16 106 {*iorsi3_insn}
     (nil))
(insn 185 184 186 14 (set (reg/f:SI 3 r3 [230])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [8 Reg_Config+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:16 977 {*thumb2_movsi_insn}
     (nil))
(insn 186 185 202 14 (set (mem/v:SI (reg/f:SI 3 r3 [230]) [1 *Reg_Config_75+0 S4 A32])
        (reg:SI 2 r2 [orig:178 _66 ] [178])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":174:16 977 {*thumb2_movsi_insn}
     (nil))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 14, next block 15, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              9 [always] 
;;              13 [always] 
;;              11 [always] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 202 186 200 16 38 (nil) [3 uses])
(note 200 202 201 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 189 16 (const_int 0 [0]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":180:1 311 {nop}
     (nil))
;;  succ:       15 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 16, next block 1, flags: (RTL, MODIFIED)
;;  pred:       16 [always]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 189 201 190 15 30 (nil) [0 uses])
(note 190 189 203 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 203 190 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_DInit (MCAL_GPIO_DInit, funcdef_no=6, decl_uid=5729, cgraph_uid=7, symbol_order=6)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=24,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 11:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 14:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 15:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 19:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 20:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 30:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 31:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 34:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 35:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 37:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 38:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 39:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 49:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 50:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 51:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 53:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 55:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 57:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 58:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 63:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 64:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 65:  (0) r  (1) r {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 68:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =r  (1) %r  (2) I {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 72:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 73:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 74:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 75:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 2 in insn 76:  (0) r  (1) r  (2) K {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 77:  (0) m  (1) lk*r {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 11
EBB 10

********** Pseudo live ranges #1: **********

  BB 10
  BB 11
   Insn 92: point = 0, n_alt = -1
  BB 3
   Insn 82: point = 0, n_alt = -1
   Insn 20: point = 0, n_alt = 6
   Insn 19: point = 1, n_alt = 2
   Insn 18: point = 3, n_alt = 5
   Insn 17: point = 4, n_alt = 5
   Insn 16: point = 6, n_alt = 5
   Insn 15: point = 7, n_alt = 6
   Insn 14: point = 8, n_alt = 0
   Insn 13: point = 10, n_alt = 5
   Insn 12: point = 11, n_alt = 5
   Insn 11: point = 13, n_alt = 5
  BB 5
   Insn 84: point = 14, n_alt = -1
   Insn 39: point = 14, n_alt = 6
   Insn 38: point = 15, n_alt = 2
   Insn 37: point = 17, n_alt = 5
   Insn 36: point = 18, n_alt = 5
   Insn 35: point = 20, n_alt = 5
   Insn 34: point = 21, n_alt = 6
   Insn 33: point = 22, n_alt = 0
   Insn 32: point = 24, n_alt = 5
   Insn 31: point = 25, n_alt = 5
   Insn 30: point = 27, n_alt = 5
  BB 9
   Insn 77: point = 28, n_alt = 6
   Insn 76: point = 29, n_alt = 2
   Insn 75: point = 31, n_alt = 5
   Insn 74: point = 32, n_alt = 5
   Insn 73: point = 34, n_alt = 5
   Insn 72: point = 35, n_alt = 6
   Insn 71: point = 36, n_alt = 0
   Insn 70: point = 38, n_alt = 5
   Insn 69: point = 39, n_alt = 5
   Insn 68: point = 41, n_alt = 5
  BB 7
   Insn 86: point = 42, n_alt = -1
   Insn 58: point = 42, n_alt = 6
   Insn 57: point = 43, n_alt = 2
   Insn 56: point = 45, n_alt = 5
   Insn 55: point = 46, n_alt = 5
   Insn 54: point = 48, n_alt = 5
   Insn 53: point = 49, n_alt = 6
   Insn 52: point = 50, n_alt = 0
   Insn 51: point = 52, n_alt = 5
   Insn 50: point = 53, n_alt = 5
   Insn 49: point = 55, n_alt = 5
  BB 8
   Insn 66: point = 56, n_alt = -1
   Insn 65: point = 56, n_alt = 1
   Insn 64: point = 57, n_alt = 5
   Insn 63: point = 58, n_alt = 5
  BB 6
   Insn 47: point = 59, n_alt = -1
   Insn 46: point = 59, n_alt = 1
   Insn 45: point = 60, n_alt = 5
   Insn 44: point = 61, n_alt = 5
  BB 4
   Insn 28: point = 62, n_alt = -1
   Insn 27: point = 62, n_alt = 1
   Insn 26: point = 63, n_alt = 5
   Insn 25: point = 64, n_alt = 5
  BB 2
   Insn 9: point = 65, n_alt = -1
   Insn 8: point = 65, n_alt = 1
   Insn 7: point = 66, n_alt = 5
   Insn 6: point = 67, n_alt = 5
   Insn 2: point = 68, n_alt = 6
 r113: [12..13]
 r114: [9..11]
 r115: [7..10]
 r116: [7..8]
 r117: [5..6]
 r118: [2..4]
 r119: [0..3]
 r120: [0..1]
 r121: [26..27]
 r122: [23..25]
 r123: [21..24]
 r124: [21..22]
 r125: [19..20]
 r126: [16..18]
 r127: [14..17]
 r128: [14..15]
 r129: [54..55]
 r130: [51..53]
 r131: [49..52]
 r132: [49..50]
 r133: [47..48]
 r134: [44..46]
 r135: [42..45]
 r136: [42..43]
 r137: [40..41]
 r138: [37..39]
 r139: [35..38]
 r140: [35..36]
 r141: [33..34]
 r142: [30..32]
 r143: [28..31]
 r144: [28..29]
 r145: [65..67]
 r146: [65..66]
 r147: [62..64]
 r148: [62..63]
 r149: [59..61]
 r150: [59..60]
 r151: [56..58]
 r152: [56..57]
Compressing live ranges: from 68 to 56 - 82%
Ranges after the compression:
 r113: [10..11]
 r114: [8..9]
 r115: [6..9]
 r116: [6..7]
 r117: [4..5]
 r118: [2..3]
 r119: [0..3]
 r120: [0..1]
 r121: [22..23]
 r122: [20..21]
 r123: [18..21]
 r124: [18..19]
 r125: [16..17]
 r126: [14..15]
 r127: [12..15]
 r128: [12..13]
 r129: [46..47]
 r130: [44..45]
 r131: [42..45]
 r132: [42..43]
 r133: [40..41]
 r134: [38..39]
 r135: [36..39]
 r136: [36..37]
 r137: [34..35]
 r138: [32..33]
 r139: [30..33]
 r140: [30..31]
 r141: [28..29]
 r142: [26..27]
 r143: [24..27]
 r144: [24..25]
 r145: [54..55]
 r146: [54..55]
 r147: [52..53]
 r148: [52..53]
 r149: [50..51]
 r150: [50..51]
 r151: [48..49]
 r152: [48..49]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 19
changing reg in insn 18
changing reg in insn 20
changing reg in insn 19
changing reg in insn 20
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 33
changing reg in insn 32
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 38
changing reg in insn 37
changing reg in insn 39
changing reg in insn 38
changing reg in insn 39
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 52
changing reg in insn 51
changing reg in insn 53
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 57
changing reg in insn 56
changing reg in insn 58
changing reg in insn 57
changing reg in insn 58
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 71
changing reg in insn 70
changing reg in insn 72
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 74
changing reg in insn 76
changing reg in insn 75
changing reg in insn 77
changing reg in insn 76
changing reg in insn 77
changing reg in insn 6
changing reg in insn 8
changing reg in insn 7
changing reg in insn 8
changing reg in insn 25
changing reg in insn 27
changing reg in insn 26
changing reg in insn 27
changing reg in insn 44
changing reg in insn 46
changing reg in insn 45
changing reg in insn 46
changing reg in insn 63
changing reg in insn 65
changing reg in insn 64
changing reg in insn 65
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_DInit

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={13d,12u} r3={29d,28u} r7={1d,16u} r13={1d,11u} r14={1d} r100={4d,4u} r102={1d,1u} 
;;    total ref usage 125{52d,73u,0e} in 61{61 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 145 146
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])
        (reg:SI 0 r0 [ GPIOx ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":191:1 977 {*thumb2_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 3 r3 [145])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":193:4 977 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 2 r2 [146])
        (const_int 1073809408 [0x40010800])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":193:4 977 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [145])
            (reg:SI 2 r2 [146]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":193:4 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":193:4 273 {arm_cond_branch}
     (nil)
 -> 23)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119 120
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg/f:SI 3 r3 [orig:113 _1 ] [113])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":195:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 12 11 13 3 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:113 _1 ] [113])
                (const_int 12 [0xc])) [1 _1->APB2RSTR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":195:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 3 (set (reg/f:SI 2 r2 [orig:115 _3 ] [115])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":195:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 14 13 15 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (ior:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 4 [0x4]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":195:17 106 {*iorsi3_insn}
     (nil))
(insn 15 14 16 3 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:115 _3 ] [115])
                (const_int 12 [0xc])) [1 _3->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:116 _4 ] [116])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":195:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 17 3 (set (reg/f:SI 3 r3 [orig:117 _5 ] [117])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":196:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 3 (set (reg:SI 3 r3 [orig:118 _6 ] [118])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:117 _5 ] [117])
                (const_int 12 [0xc])) [1 _5->APB2RSTR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":196:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 18 17 19 3 (set (reg/f:SI 2 r2 [orig:119 _7 ] [119])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":196:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 19 18 20 3 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (and:SI (reg:SI 3 r3 [orig:118 _6 ] [118])
            (const_int -5 [0xfffffffffffffffb]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":196:17 90 {*arm_andsi3_insn}
     (nil))
(insn 20 19 82 3 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:119 _7 ] [119])
                (const_int 12 [0xc])) [1 _7->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:120 _8 ] [120])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":196:17 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 82 20 83 3 (set (pc)
        (label_ref:SI 91)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":218:1 284 {*arm_jump}
     (nil)
 -> 91)
;;  succ:       11 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 83 82 23)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 147 148
(code_label 23 83 24 4 40 (nil) [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:SI 3 r3 [147])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":199:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 26 25 27 4 (set (reg:SI 2 r2 [148])
        (const_int 1073810432 [0x40010c00])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":199:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 27 26 28 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [147])
            (reg:SI 2 r2 [148]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":199:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":199:9 273 {arm_cond_branch}
     (nil)
 -> 42)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 121 122 123 124 125 126 127 128
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg/f:SI 3 r3 [orig:121 _9 ] [121])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":201:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 31 30 32 5 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:121 _9 ] [121])
                (const_int 12 [0xc])) [1 _9->APB2RSTR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":201:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 32 31 33 5 (set (reg/f:SI 2 r2 [orig:123 _11 ] [123])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":201:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 33 32 34 5 (set (reg:SI 3 r3 [orig:124 _12 ] [124])
        (ior:SI (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 8 [0x8]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":201:17 106 {*iorsi3_insn}
     (nil))
(insn 34 33 35 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:123 _11 ] [123])
                (const_int 12 [0xc])) [1 _11->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:124 _12 ] [124])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":201:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 35 34 36 5 (set (reg/f:SI 3 r3 [orig:125 _13 ] [125])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":202:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 36 35 37 5 (set (reg:SI 3 r3 [orig:126 _14 ] [126])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:125 _13 ] [125])
                (const_int 12 [0xc])) [1 _13->APB2RSTR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":202:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 37 36 38 5 (set (reg/f:SI 2 r2 [orig:127 _15 ] [127])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":202:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 38 37 39 5 (set (reg:SI 3 r3 [orig:128 _16 ] [128])
        (and:SI (reg:SI 3 r3 [orig:126 _14 ] [126])
            (const_int -9 [0xfffffffffffffff7]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":202:17 90 {*arm_andsi3_insn}
     (nil))
(insn 39 38 84 5 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:127 _15 ] [127])
                (const_int 12 [0xc])) [1 _15->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:128 _16 ] [128])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":202:17 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 84 39 85 5 (set (pc)
        (label_ref:SI 91)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":218:1 284 {*arm_jump}
     (nil)
 -> 91)
;;  succ:       11 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 85 84 42)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 149 150
(code_label 42 85 43 6 42 (nil) [1 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:SI 3 r3 [149])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":204:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 45 44 46 6 (set (reg:SI 2 r2 [150])
        (const_int 1073811456 [0x40011000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":204:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 46 45 47 6 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [149])
            (reg:SI 2 r2 [150]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":204:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 47 46 48 6 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":204:9 273 {arm_cond_branch}
     (nil)
 -> 61)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 129 130 131 132 133 134 135 136
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg/f:SI 3 r3 [orig:129 _17 ] [129])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":206:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 50 49 51 7 (set (reg:SI 3 r3 [orig:130 _18 ] [130])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:129 _17 ] [129])
                (const_int 12 [0xc])) [1 _17->APB2RSTR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":206:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 51 50 52 7 (set (reg/f:SI 2 r2 [orig:131 _19 ] [131])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":206:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 52 51 53 7 (set (reg:SI 3 r3 [orig:132 _20 ] [132])
        (ior:SI (reg:SI 3 r3 [orig:130 _18 ] [130])
            (const_int 16 [0x10]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":206:17 106 {*iorsi3_insn}
     (nil))
(insn 53 52 54 7 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:131 _19 ] [131])
                (const_int 12 [0xc])) [1 _19->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:132 _20 ] [132])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":206:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 54 53 55 7 (set (reg/f:SI 3 r3 [orig:133 _21 ] [133])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":207:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 55 54 56 7 (set (reg:SI 3 r3 [orig:134 _22 ] [134])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:133 _21 ] [133])
                (const_int 12 [0xc])) [1 _21->APB2RSTR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":207:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 56 55 57 7 (set (reg/f:SI 2 r2 [orig:135 _23 ] [135])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":207:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 57 56 58 7 (set (reg:SI 3 r3 [orig:136 _24 ] [136])
        (and:SI (reg:SI 3 r3 [orig:134 _22 ] [134])
            (const_int -17 [0xffffffffffffffef]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":207:17 90 {*arm_andsi3_insn}
     (nil))
(insn 58 57 86 7 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:135 _23 ] [135])
                (const_int 12 [0xc])) [1 _23->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:136 _24 ] [136])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":207:17 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 86 58 87 7 (set (pc)
        (label_ref:SI 91)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":218:1 284 {*arm_jump}
     (nil)
 -> 91)
;;  succ:       11 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 87 86 61)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 151 152
(code_label 61 87 62 8 43 (nil) [1 uses])
(note 62 61 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 8 (set (reg:SI 3 r3 [151])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":209:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 64 63 65 8 (set (reg:SI 2 r2 [152])
        (const_int 1073812480 [0x40011400])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":209:9 977 {*thumb2_movsi_insn}
     (nil))
(insn 65 64 66 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [151])
            (reg:SI 2 r2 [152]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":209:9 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 66 65 67 8 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref:SI 91)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":209:9 273 {arm_cond_branch}
     (nil)
 -> 91)
;;  succ:       9 (FALLTHRU)
;;              11
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 137 138 139 140 141 142 143 144
(note 67 66 68 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 9 (set (reg/f:SI 3 r3 [orig:137 _25 ] [137])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":211:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 69 68 70 9 (set (reg:SI 3 r3 [orig:138 _26 ] [138])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:137 _25 ] [137])
                (const_int 12 [0xc])) [1 _25->APB2RSTR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":211:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 70 69 71 9 (set (reg/f:SI 2 r2 [orig:139 _27 ] [139])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":211:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 71 70 72 9 (set (reg:SI 3 r3 [orig:140 _28 ] [140])
        (ior:SI (reg:SI 3 r3 [orig:138 _26 ] [138])
            (const_int 32 [0x20]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":211:17 106 {*iorsi3_insn}
     (nil))
(insn 72 71 73 9 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:139 _27 ] [139])
                (const_int 12 [0xc])) [1 _27->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:140 _28 ] [140])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":211:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 73 72 74 9 (set (reg/f:SI 3 r3 [orig:141 _29 ] [141])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":212:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 74 73 75 9 (set (reg:SI 3 r3 [orig:142 _30 ] [142])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:141 _29 ] [141])
                (const_int 12 [0xc])) [1 _29->APB2RSTR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":212:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 75 74 76 9 (set (reg/f:SI 2 r2 [orig:143 _31 ] [143])
        (const_int 1073876992 [0x40021000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":212:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 76 75 77 9 (set (reg:SI 3 r3 [orig:144 _32 ] [144])
        (and:SI (reg:SI 3 r3 [orig:142 _30 ] [142])
            (const_int -33 [0xffffffffffffffdf]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":212:17 90 {*arm_andsi3_insn}
     (nil))
(insn 77 76 91 9 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:143 _31 ] [143])
                (const_int 12 [0xc])) [1 _31->APB2RSTR+0 S4 A32])
        (reg:SI 3 r3 [orig:144 _32 ] [144])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":212:17 977 {*thumb2_movsi_insn}
     (nil))
;;  succ:       11 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 9, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8
;;              7 [always] 
;;              9 [always]  (FALLTHRU)
;;              5 [always] 
;;              3 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 91 77 90 11 44 (nil) [4 uses])
(note 90 91 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 92 90 80 11 (const_int 0 [0]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":218:1 311 {nop}
     (nil))
;;  succ:       10 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL, MODIFIED)
;;  pred:       11 [always]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 80 92 81 10 39 (nil) [0 uses])
(note 81 80 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 113 81 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_ReadPin (MCAL_GPIO_ReadPin, funcdef_no=7, decl_uid=5732, cgraph_uid=8, symbol_order=7)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=24,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2:  (0) m  (1) lk*r {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 12
	 Choosing alt 1 in insn 12:  (0) l  (1) 0  (2) l {*arm_andsi3_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) I {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 29: point = 0, n_alt = -1
   Insn 28: point = 0, n_alt = -2
   Insn 24: point = 1, n_alt = -2
  BB 3
   Insn 31: point = 4, n_alt = -1
   Insn 16: point = 4, n_alt = 1
  BB 4
   Insn 21: point = 5, n_alt = 1
  BB 2
   Insn 14: point = 6, n_alt = -1
   Insn 13: point = 6, n_alt = 0
   Insn 12: point = 7, n_alt = 1
   Insn 11: point = 9, n_alt = 1
   Insn 10: point = 10, n_alt = 5
   Insn 9: point = 12, n_alt = 5
   Insn 5: point = 13, n_alt = 4
   Insn 4: point = 14, n_alt = 0
   Insn 3: point = 16, n_alt = -2
   Insn 2: point = 17, n_alt = 6
 r113: [8..10]
 r114: [8..9]
 r115: [6..7]
 r116: [2..5]
 r117: [0..1]
 r118: [15..16]
 r119: [13..14]
 r120: [11..12]
Compressing live ranges: from 17 to 14 - 82%
Ranges after the compression:
 r113: [6..7]
 r114: [6..7]
 r115: [4..5]
 r116: [2..3]
 r117: [0..1]
 r118: [12..13]
 r119: [10..11]
 r120: [8..9]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 21
changing reg in insn 16
changing reg in insn 24
changing reg in insn 24
changing reg in insn 28
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 9
changing reg in insn 10
deleting insn with uid = 4.
deleting insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_ReadPin

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={2d,1u} r3={7d,5u} r7={1d,9u} r13={1d,5u} r14={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 43{17d,26u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 118 119 120
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])
        (reg:SI 0 r0 [ GPIOx ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":232:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 5 2 (set (reg:SI 3 r3 [118])
        (reg:SI 1 r1 [ PinNumber ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":232:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 5 3 6 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 2 [0x2])) [3 PinNumber+0 S2 A16])
        (reg:HI 3 r3 [119])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":232:1 979 {*thumb2_movhi_insn}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:SI 3 r3 [120])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":233:11 977 {*thumb2_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 2 r2 [orig:113 _1 ] [113])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [120])
                (const_int 8 [0x8])) [1 GPIOx_6(D)->IDR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":233:11 977 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [3 PinNumber+0 S2 A16]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":233:17 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (and:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (reg:SI 2 r2 [orig:113 _1 ] [113]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":233:17 90 {*arm_andsi3_insn}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:115 _3 ] [115])
            (const_int 1 [0x1]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":233:4 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":233:4 273 {arm_cond_branch}
     (nil)
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 116
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 31 3 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (const_int 1 [0x1])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":233:53 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 31 16 32 3 (set (pc)
        (label_ref 22)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":233:53 284 {*arm_jump}
     (nil)
 -> 22)
;;  succ:       5 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116

(barrier 32 31 19)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 116
(code_label 19 32 20 4 48 (nil) [1 uses])
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:SI 3 r3 [orig:116 _4 ] [116])
        (const_int 0 [0])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":234:14 977 {*thumb2_movsi_insn}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 116
;; lr  def 	 0 [r0] 117
(code_label 22 21 23 5 49 (nil) [1 uses])
(note 23 22 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 23 29 5 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:117 <retval> ] [117])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":236:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 29 28 33 5 (use (reg/i:SI 0 r0)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":236:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 33 29 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_ReadPort (MCAL_GPIO_ReadPort, funcdef_no=8, decl_uid=5734, cgraph_uid=9, symbol_order=8)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=24,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) r {*thumb2_zero_extendhisi2_v6}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 16: point = 0, n_alt = -1
   Insn 15: point = 0, n_alt = -2
   Insn 11: point = 1, n_alt = -2
   Insn 8: point = 3, n_alt = 0
   Insn 7: point = 5, n_alt = 5
   Insn 6: point = 7, n_alt = 5
   Insn 2: point = 8, n_alt = 6
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]
 r116: [6..7]
Compressing live ranges: from 8 to 8 - 100%
Ranges after the compression:
 r113: [4..5]
 r114: [2..3]
 r115: [0..1]
 r116: [6..7]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 11
changing reg in insn 15
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_ReadPort

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 3 [r3] 7 [r7]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={4d,3u} r7={1d,4u} r13={1d,2u} r14={1d} r102={1d,1u} 
;;    total ref usage 25{12d,13u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 113 114 115 116
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])
        (reg:SI 0 r0 [ GPIOx ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":247:1 977 {*thumb2_movsi_insn}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:SI 3 r3 [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":248:25 977 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 3 r3 [orig:113 _1 ] [113])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [116])
                (const_int 8 [0x8])) [1 GPIOx_3(D)->IDR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":248:25 977 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 15 2 (set (reg:SI 3 r3 [orig:114 _4 ] [114])
        (zero_extend:SI (reg:HI 3 r3 [orig:113 _1 ] [113]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":248:9 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 15 8 16 2 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:115 <retval> ] [115])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":249:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 18 2 (use (reg/i:SI 0 r0)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":249:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 18 16 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_WritePin (MCAL_GPIO_WritePin, funcdef_no=9, decl_uid=5738, cgraph_uid=10, symbol_order=9)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=24,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2:  (0) m  (1) lk*r {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) m  (1) r {*thumb2_movhi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) rk {*arm_movqi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=21,losers=2,rld_nregs=1
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 8:  (0) Uu  (1) l {*arm_movqi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) r  (1) m {thumb2_zero_extendqisi2_v6}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 17:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 18:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) l  (1) l  (2) M {*arm_shiftsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 26:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 27:  (0) m  (1) lk*r {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 6
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
  BB 6
   Insn 35: point = 0, n_alt = -1
  BB 3
   Insn 32: point = 0, n_alt = -1
   Insn 18: point = 0, n_alt = 6
   Insn 17: point = 1, n_alt = 5
   Insn 16: point = 2, n_alt = 1
  BB 4
   Insn 27: point = 3, n_alt = 6
   Insn 26: point = 4, n_alt = 5
   Insn 25: point = 5, n_alt = -2
   Insn 24: point = 7, n_alt = 1
   Insn 23: point = 9, n_alt = 1
  BB 2
   Insn 14: point = 10, n_alt = -1
   Insn 13: point = 10, n_alt = 0
   Insn 12: point = 11, n_alt = 1
   Insn 8: point = 12, n_alt = 6
   Insn 7: point = 13, n_alt = 0
   Insn 5: point = 15, n_alt = 4
   Insn 4: point = 16, n_alt = 0
   Insn 6: point = 18, n_alt = -2
   Insn 3: point = 19, n_alt = -2
   Insn 2: point = 20, n_alt = 6
 r113: [0..2]
 r114: [8..9]
 r115: [6..7]
 r116: [3..5]
 r117: [17..19]
 r118: [15..16]
 r119: [14..18]
 r120: [12..13]
 r121: [10..11]
 r122: [0..1]
 r123: [3..4]
Compressing live ranges: from 20 to 16 - 80%
Ranges after the compression:
 r113: [0..1]
 r114: [6..7]
 r115: [4..5]
 r116: [2..3]
 r117: [14..15]
 r118: [12..13]
 r119: [12..15]
 r120: [10..11]
 r121: [8..9]
 r122: [0..1]
 r123: [2..3]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 16
changing reg in insn 18
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 25
changing reg in insn 25
changing reg in insn 27
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 17
changing reg in insn 18
changing reg in insn 26
changing reg in insn 27
deleting insn with uid = 6.
deleting insn with uid = 4.
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_WritePin

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={3d,3u} r3={8d,7u} r7={1d,14u} r13={1d,6u} r14={1d} r100={1d,1u} r102={1d,1u} 
;;    total ref usage 52{18d,34u,0e} in 18{18 regular + 0 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 117 118 119 120 121
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])
        (reg:SI 0 r0 [ GPIOx ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":263:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 5 2 (set (reg:SI 3 r3 [117])
        (reg:SI 1 r1 [ PinNumber ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":263:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 5 3 7 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 2 [0x2])) [3 PinNumber+0 S2 A16])
        (reg:HI 3 r3 [118])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":263:1 979 {*thumb2_movhi_insn}
     (nil))
(insn 7 5 8 2 (set (reg:QI 3 r3 [120])
        (reg:QI 2 r2 [119])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":263:1 263 {*arm_movqi_insn}
     (nil))
(insn 8 7 9 2 (set (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                (const_int 1 [0x1])) [0 Value+0 S1 A8])
        (reg:QI 3 r3 [120])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":263:1 263 {*arm_movqi_insn}
     (nil))
(note 9 8 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 9 13 2 (set (reg:SI 3 r3 [121])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 7 r7)
                    (const_int 1 [0x1])) [0 Value+0 S1 A8]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":265:4 1006 {thumb2_zero_extendqisi2_v6}
     (nil))
(insn 13 12 14 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [121])
            (const_int 1 [0x1]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":265:4 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":265:4 273 {arm_cond_branch}
     (nil)
 -> 21)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 122
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:SI 2 r2 [orig:113 _1 ] [113])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [3 PinNumber+0 S2 A16]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":268:17 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 17 16 18 3 (set (reg/f:SI 3 r3 [122])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":268:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 18 17 32 3 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [122])
                (const_int 16 [0x10])) [1 GPIOx_9(D)->BSRR+0 S4 A32])
        (reg:SI 2 r2 [orig:113 _1 ] [113])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":268:15 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 32 18 33 3 (set (pc)
        (label_ref:SI 36)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":276:1 284 {*arm_jump}
     (nil)
 -> 36)
;;  succ:       6 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(barrier 33 32 21)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 6, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 114 115 116 123
(code_label 21 33 22 4 53 (nil) [1 uses])
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [3 PinNumber+0 S2 A16]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":274:38 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 24 23 25 4 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (ashift:SI (reg:SI 3 r3 [orig:114 _2 ] [114])
            (const_int 16 [0x10]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":274:38 147 {*arm_shiftsi3}
     (nil))
(insn 25 24 26 4 (set (reg:SI 2 r2 [orig:116 _4 ] [116])
        (reg:SI 3 r3 [orig:115 _3 ] [115])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":274:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 26 25 27 4 (set (reg/f:SI 3 r3 [123])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":274:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 27 26 36 4 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [123])
                (const_int 16 [0x10])) [1 GPIOx_9(D)->BSRR+0 S4 A32])
        (reg:SI 2 r2 [orig:116 _4 ] [116])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":274:15 977 {*thumb2_movsi_insn}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 4, next block 5, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              3 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 36 27 34 6 55 (nil) [1 uses])
(note 34 36 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 30 6 (const_int 0 [0]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":276:1 311 {nop}
     (nil))
;;  succ:       5 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL, MODIFIED)
;;  pred:       6 [always]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(code_label 30 35 31 5 52 (nil) [0 uses])
(note 31 30 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 37 31 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_WritePort (MCAL_GPIO_WritePort, funcdef_no=10, decl_uid=5741, cgraph_uid=11, symbol_order=10)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=24,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2:  (0) m  (1) lk*r {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 11:  (0) m  (1) lk*r {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 15: point = 0, n_alt = -1
  BB 2
   Insn 11: point = 0, n_alt = 6
   Insn 10: point = 1, n_alt = 5
   Insn 9: point = 2, n_alt = 1
   Insn 5: point = 3, n_alt = 4
   Insn 4: point = 4, n_alt = 0
   Insn 3: point = 6, n_alt = -2
   Insn 2: point = 7, n_alt = 6
 r113: [0..2]
 r114: [5..6]
 r115: [3..4]
 r116: [0..1]
Compressing live ranges: from 7 to 6 - 85%
Ranges after the compression:
 r113: [0..1]
 r114: [4..5]
 r115: [2..3]
 r116: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 9
changing reg in insn 11
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 10
changing reg in insn 11
deleting insn with uid = 4.
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_WritePort

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={2d,1u} r3={3d,2u} r7={1d,7u} r13={1d,3u} r14={1d} r102={1d,1u} 
;;    total ref usage 27{11d,16u,0e} in 7{7 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])
        (reg:SI 0 r0 [ GPIOx ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":289:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 5 2 (set (reg:SI 3 r3 [114])
        (reg:SI 1 r1 [ Value ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":289:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 5 3 6 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 2 [0x2])) [3 Value+0 S2 A16])
        (reg:HI 3 r3 [115])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":289:1 979 {*thumb2_movhi_insn}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 2 r2 [orig:113 _1 ] [113])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [3 Value+0 S2 A16]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":291:15 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 3 r3 [116])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":291:13 977 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 14 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [116])
                (const_int 12 [0xc])) [1 GPIOx_4(D)->ODR+0 S4 A32])
        (reg:SI 2 r2 [orig:113 _1 ] [113])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":291:13 977 {*thumb2_movsi_insn}
     (nil))
;;  succ:       3 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 14 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (const_int 0 [0]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":294:1 311 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 16 15 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_TogglePin (MCAL_GPIO_TogglePin, funcdef_no=11, decl_uid=5744, cgraph_uid=12, symbol_order=11)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=0)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=24,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2:  (0) m  (1) lk*r {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 9:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) l  (1) 0  (2) l {*arm_xorsi3}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 14:  (0) m  (1) lk*r {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3

********** Pseudo live ranges #1: **********

  BB 3
   Insn 18: point = 0, n_alt = -1
  BB 2
   Insn 14: point = 0, n_alt = 6
   Insn 13: point = 1, n_alt = 5
   Insn 12: point = 2, n_alt = 1
   Insn 11: point = 4, n_alt = 1
   Insn 10: point = 5, n_alt = 5
   Insn 9: point = 7, n_alt = 5
   Insn 5: point = 8, n_alt = 4
   Insn 4: point = 9, n_alt = 0
   Insn 3: point = 11, n_alt = -2
   Insn 2: point = 12, n_alt = 6
 r113: [3..5]
 r114: [3..4]
 r115: [0..2]
 r116: [10..11]
 r117: [8..9]
 r118: [6..7]
 r119: [0..1]
Compressing live ranges: from 12 to 10 - 83%
Ranges after the compression:
 r113: [2..3]
 r114: [2..3]
 r115: [0..1]
 r116: [8..9]
 r117: [6..7]
 r118: [4..5]
 r119: [0..1]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=16, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=16, prev_offset=16)
Can't eliminate 102 to 13 (offset=8, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=8, prev_offset=8)
changing reg in insn 10
changing reg in insn 12
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 14
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 9
changing reg in insn 10
changing reg in insn 13
changing reg in insn 14
deleting insn with uid = 4.
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_TogglePin

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={3d,2u} r3={5d,4u} r7={1d,8u} r13={1d,3u} r14={1d} r102={1d,1u} 
;;    total ref usage 34{14d,20u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 113 114 115 116 117 118 119
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])
        (reg:SI 0 r0 [ GPIOx ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":307:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 5 2 (set (reg:SI 3 r3 [116])
        (reg:SI 1 r1 [ PinNumber ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":307:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 5 3 6 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 2 [0x2])) [3 PinNumber+0 S2 A16])
        (reg:HI 3 r3 [117])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":307:1 979 {*thumb2_movhi_insn}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:SI 3 r3 [118])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":308:13 977 {*thumb2_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (reg:SI 2 r2 [orig:113 _1 ] [113])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [118])
                (const_int 12 [0xc])) [1 GPIOx_5(D)->ODR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":308:13 977 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 3 r3 [orig:114 _2 ] [114])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [3 PinNumber+0 S2 A16]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":308:16 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 r2 [orig:115 _3 ] [115])
        (xor:SI (reg:SI 2 r2 [orig:113 _1 ] [113])
            (reg:SI 3 r3 [orig:114 _2 ] [114]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":308:13 109 {*arm_xorsi3}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 3 r3 [119])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":308:13 977 {*thumb2_movsi_insn}
     (nil))
(insn 14 13 17 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [119])
                (const_int 12 [0xc])) [1 GPIOx_5(D)->ODR+0 S4 A32])
        (reg:SI 2 r2 [orig:115 _3 ] [115])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":308:13 977 {*thumb2_movsi_insn}
     (nil))
;;  succ:       3 [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 1, flags: (RTL, MODIFIED)
;;  pred:       2 [always]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	
(note 17 14 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (const_int 0 [0]) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":309:1 311 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 19 18 0 NOTE_INSN_DELETED)

;; Function MCAL_GPIO_LockPin (MCAL_GPIO_LockPin, funcdef_no=12, decl_uid=5747, cgraph_uid=13, symbol_order=12)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=0)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=24,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 2:  (0) m  (1) lk*r {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =r  (1) rk {*thumb2_movhi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) m  (1) r {*thumb2_movhi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) r  (1) I {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 10:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            alt=0: Bad operand -- refuse
          alt=1,overall=6,losers=1,rld_nregs=1
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 13
	 Choosing alt 1 in insn 13:  (0) l  (1) 0  (2) l {*iorsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 14:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 15:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 16:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 17:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (1) m {*thumb2_zero_extendhisi2_v6}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 20:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 23:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 24:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 25:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 26:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 27:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 28:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 32:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 33:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=15,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =r  (1) %r  (2) I {*arm_andsi3_insn}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=5,overall=22,losers=2,rld_nregs=1
            1 Costly set: reject++
          alt=6,overall=1,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 35:  (0) m  (1) lk*r {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            alt=1: Bad operand -- refuse
            alt=2: Bad operand -- refuse
            alt=3: Bad operand -- refuse
            alt=4: Bad operand -- refuse
            0 Costly set: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) lk*r  (1) mi {*thumb2_movsi_insn}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) l  (1) Py {*arm_cmpsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) I {*thumb2_movsi_insn}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (1) I {*thumb2_movsi_insn}
	   Spilling non-eliminable hard regs: 7

********** Inheritance #1: **********

EBB 2 3 4
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 7
   Insn 58: point = 0, n_alt = -1
   Insn 57: point = 0, n_alt = -2
   Insn 53: point = 1, n_alt = -2
  BB 5
   Insn 62: point = 4, n_alt = -1
   Insn 45: point = 4, n_alt = 1
  BB 4
   Insn 60: point = 5, n_alt = -1
   Insn 40: point = 5, n_alt = 1
  BB 3
   Insn 38: point = 6, n_alt = -1
   Insn 37: point = 6, n_alt = 0
   Insn 36: point = 7, n_alt = 5
   Insn 35: point = 8, n_alt = 6
   Insn 34: point = 9, n_alt = 0
   Insn 33: point = 11, n_alt = 5
   Insn 32: point = 13, n_alt = 5
  BB 6
   Insn 50: point = 14, n_alt = 1
  BB 2
   Insn 30: point = 15, n_alt = -1
   Insn 29: point = 15, n_alt = 0
   Insn 28: point = 16, n_alt = 5
   Insn 27: point = 17, n_alt = 6
   Insn 26: point = 18, n_alt = 0
   Insn 25: point = 20, n_alt = 5
   Insn 24: point = 22, n_alt = 5
   Insn 23: point = 23, n_alt = 6
   Insn 22: point = 24, n_alt = 5
   Insn 21: point = 25, n_alt = 5
   Insn 20: point = 26, n_alt = 6
   Insn 19: point = 27, n_alt = 5
   Insn 18: point = 28, n_alt = 1
   Insn 17: point = 29, n_alt = 6
   Insn 16: point = 30, n_alt = 5
   Insn 15: point = 31, n_alt = 5
   Insn 14: point = 32, n_alt = 6
   Insn 13: point = 33, n_alt = 1
   Insn 12: point = 35, n_alt = 5
   Insn 11: point = 36, n_alt = 1
   Insn 10: point = 37, n_alt = 6
   Insn 9: point = 38, n_alt = 1
   Insn 5: point = 39, n_alt = 4
   Insn 4: point = 40, n_alt = 0
   Insn 3: point = 42, n_alt = -2
   Insn 2: point = 43, n_alt = 6
 r113: [34..36]
 r114: [34..35]
 r115: [32..33]
 r116: [29..31]
 r117: [26..28]
 r118: [23..25]
 r119: [19..20]
 r120: [17..18]
 r121: [15..16]
 r122: [10..11]
 r123: [8..9]
 r124: [6..7]
 r125: [14..14] [2..5]
 r126: [0..1]
 r127: [41..42]
 r128: [39..40]
 r129: [37..38]
 r130: [29..30]
 r131: [26..27]
 r132: [23..24]
 r133: [21..22]
 r134: [12..13]
Compressing live ranges: from 43 to 37 - 86%
Ranges after the compression:
 r113: [29..30]
 r114: [29..30]
 r115: [27..28]
 r116: [25..26]
 r117: [23..24]
 r118: [21..22]
 r119: [17..18]
 r120: [15..16]
 r121: [13..14]
 r122: [8..9]
 r123: [6..7]
 r124: [4..5]
 r125: [12..12] [2..3]
 r126: [0..1]
 r127: [35..36]
 r128: [33..34]
 r129: [31..32]
 r130: [25..26]
 r131: [23..24]
 r132: [21..22]
 r133: [19..20]
 r134: [10..11]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can't eliminate 103 to 13 (offset=24, prev_offset=0)
Can't eliminate 103 to 102 (offset=8, prev_offset=0)
Can't eliminate 103 to 11 (offset=4, prev_offset=0)
Can eliminate 103 to 7 (offset=24, prev_offset=24)
Can't eliminate 102 to 13 (offset=16, prev_offset=0)
Can't eliminate 102 to 11 (offset=-4, prev_offset=0)
Can eliminate 102 to 7 (offset=16, prev_offset=16)
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 23
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 50
changing reg in insn 45
changing reg in insn 40
changing reg in insn 53
changing reg in insn 53
changing reg in insn 57
changing reg in insn 3
changing reg in insn 4
changing reg in insn 5
changing reg in insn 9
changing reg in insn 10
changing reg in insn 16
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 32
changing reg in insn 33
deleting insn with uid = 4.
deleting insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns


MCAL_GPIO_LockPin

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	
;;  regular block artificial uses 	 7 [r7] 13 [sp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 102 [sfp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 100 [cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={5d,4u} r3={19d,16u} r7={1d,25u} r13={1d,7u} r14={1d} r100={2d,2u} r102={1d,1u} 
;;    total ref usage 92{33d,59u,0e} in 39{39 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 116 117 118 119 120 121 127 128 129 130 131 132 133
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])
        (reg:SI 0 r0 [ GPIOx ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":322:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 3 2 5 2 (set (reg:SI 3 r3 [127])
        (reg:SI 1 r1 [ PinNumber ])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":322:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 5 3 6 2 (set (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                (const_int 2 [0x2])) [3 PinNumber+0 S2 A16])
        (reg:HI 3 r3 [128])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":322:1 979 {*thumb2_movhi_insn}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 3 r3 [129])
        (const_int 65536 [0x10000])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":341:20 977 {*thumb2_movsi_insn}
     (nil))
(insn 10 9 11 2 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 temp+0 S4 A32])
        (reg:SI 3 r3 [129])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":341:20 977 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (reg:SI 2 r2 [orig:113 _1 ] [113])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [3 PinNumber+0 S2 A16]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":342:7 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 12 11 13 2 (set (reg:SI 3 r3 [orig:114 temp.1_2 ] [114])
        (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 temp+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":342:7 977 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg:SI 3 r3 [orig:115 _3 ] [115])
        (ior:SI (reg:SI 3 r3 [orig:114 temp.1_2 ] [114])
            (reg:SI 2 r2 [orig:113 _1 ] [113]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":342:7 106 {*iorsi3_insn}
     (nil))
(insn 14 13 15 2 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 temp+0 S4 A32])
        (reg:SI 3 r3 [orig:115 _3 ] [115])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":342:7 977 {*thumb2_movsi_insn}
     (nil))
(insn 15 14 16 2 (set (reg:SI 2 r2 [orig:116 temp.2_4 ] [116])
        (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 temp+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":345:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 16 15 17 2 (set (reg/f:SI 3 r3 [130])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":345:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 17 16 18 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [130])
                (const_int 24 [0x18])) [1 GPIOx_19(D)->LCKR+0 S4 A32])
        (reg:SI 2 r2 [orig:116 temp.2_4 ] [116])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":345:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 18 17 19 2 (set (reg:SI 2 r2 [orig:117 _5 ] [117])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 7 r7)
                    (const_int 2 [0x2])) [3 PinNumber+0 S2 A16]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":347:14 1005 {*thumb2_zero_extendhisi2_v6}
     (nil))
(insn 19 18 20 2 (set (reg/f:SI 3 r3 [131])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":347:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 20 19 21 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [131])
                (const_int 24 [0x18])) [1 GPIOx_19(D)->LCKR+0 S4 A32])
        (reg:SI 2 r2 [orig:117 _5 ] [117])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":347:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 21 20 22 2 (set (reg:SI 2 r2 [orig:118 temp.3_6 ] [118])
        (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 temp+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":349:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 22 21 23 2 (set (reg/f:SI 3 r3 [132])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":349:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 23 22 24 2 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [132])
                (const_int 24 [0x18])) [1 GPIOx_19(D)->LCKR+0 S4 A32])
        (reg:SI 2 r2 [orig:118 temp.3_6 ] [118])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":349:14 977 {*thumb2_movsi_insn}
     (nil))
(insn 24 23 25 2 (set (reg/f:SI 3 r3 [133])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":352:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 25 24 26 2 (set (reg:SI 3 r3 [orig:119 _7 ] [119])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [133])
                (const_int 24 [0x18])) [1 GPIOx_19(D)->LCKR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":352:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 26 25 27 2 (set (reg:SI 3 r3 [orig:120 _8 ] [120])
        (and:SI (reg:SI 3 r3 [orig:119 _7 ] [119])
            (const_int 65536 [0x10000]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":352:22 90 {*arm_andsi3_insn}
     (nil))
(insn 27 26 28 2 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 temp+0 S4 A32])
        (reg:SI 3 r3 [orig:120 _8 ] [120])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":352:7 977 {*thumb2_movsi_insn}
     (nil))
(insn 28 27 29 2 (set (reg:SI 3 r3 [orig:121 temp.4_9 ] [121])
        (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 temp+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":354:10 977 {*thumb2_movsi_insn}
     (nil))
(insn 29 28 30 2 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:121 temp.4_9 ] [121])
            (const_int 0 [0]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":354:4 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 30 29 31 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":354:4 273 {arm_cond_branch}
     (nil)
 -> 48)
;;  succ:       3 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 122 123 124 134
(note 31 30 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 3 (set (reg/f:SI 3 r3 [134])
        (mem/f/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 4 [0x4])) [5 GPIOx+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":357:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 33 32 34 3 (set (reg:SI 3 r3 [orig:122 _10 ] [122])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [134])
                (const_int 24 [0x18])) [1 GPIOx_19(D)->LCKR+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":357:15 977 {*thumb2_movsi_insn}
     (nil))
(insn 34 33 35 3 (set (reg:SI 3 r3 [orig:123 _11 ] [123])
        (and:SI (reg:SI 3 r3 [orig:122 _10 ] [122])
            (const_int 65536 [0x10000]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":357:22 90 {*arm_andsi3_insn}
     (nil))
(insn 35 34 36 3 (set (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 temp+0 S4 A32])
        (reg:SI 3 r3 [orig:123 _11 ] [123])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":357:8 977 {*thumb2_movsi_insn}
     (nil))
(insn 36 35 37 3 (set (reg:SI 3 r3 [orig:124 temp.5_12 ] [124])
        (mem/v/c:SI (plus:SI (reg/f:SI 7 r7)
                (const_int 12 [0xc])) [1 temp+0 S4 A32])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":358:11 977 {*thumb2_movsi_insn}
     (nil))
(insn 37 36 38 3 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 3 r3 [orig:124 temp.5_12 ] [124])
            (const_int 0 [0]))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":358:5 268 {*arm_cmpsi_insn}
     (nil))
(jump_insn 38 37 39 3 (set (pc)
        (if_then_else (eq (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":358:5 273 {arm_cond_branch}
     (nil)
 -> 43)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 125
(note 39 38 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 60 4 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (const_int 1 [0x1])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":358:23 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 60 40 61 4 (set (pc)
        (label_ref 51)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":358:23 284 {*arm_jump}
     (nil)
 -> 51)
;;  succ:       7 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125

(barrier 61 60 43)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 125
(code_label 43 61 44 5 60 (nil) [1 uses])
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 62 5 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (const_int 0 [0])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":359:15 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 62 45 63 5 (set (pc)
        (label_ref 51)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":359:15 284 {*arm_jump}
     (nil)
 -> 51)
;;  succ:       7 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125

(barrier 63 62 48)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 125
(code_label 48 63 49 6 59 (nil) [1 uses])
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg:SI 3 r3 [orig:125 _13 ] [125])
        (const_int 0 [0])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":361:14 977 {*thumb2_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              4 [always] 
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 125
;; lr  def 	 0 [r0] 126
(code_label 51 50 52 7 61 (nil) [2 uses])
(note 52 51 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 52 58 7 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [orig:126 <retval> ] [126])) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":362:1 977 {*thumb2_movsi_insn}
     (nil))
(insn 58 57 64 7 (use (reg/i:SI 0 r0)) "../STM32_F103C6_Drivers/MCAL_GPIO_DRIVER/stm32f103x8_gpio_driver.c":362:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

(note 64 58 0 NOTE_INSN_DELETED)
