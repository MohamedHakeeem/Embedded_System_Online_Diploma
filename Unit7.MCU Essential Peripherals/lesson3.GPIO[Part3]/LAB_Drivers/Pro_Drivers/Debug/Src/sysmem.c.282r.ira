
;; Function _sbrk (_sbrk, funcdef_no=0, decl_uid=4470, cgraph_uid=1, symbol_order=1)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 30.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r136: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a2 (r136,l0) best LO_REGS, allocno LO_REGS
    r135: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a6 (r135,l0) best LO_REGS, allocno LO_REGS
    r134: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a7 (r134,l0) best LO_REGS, allocno LO_REGS
    r133: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a8 (r133,l0) best LO_REGS, allocno LO_REGS
    r132: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a10 (r132,l0) best LO_REGS, allocno LO_REGS
    r131: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a12 (r131,l0) best LO_REGS, allocno LO_REGS
    r130: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a15 (r130,l0) best LO_REGS, allocno LO_REGS
    r129: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a17 (r129,l0) best LO_REGS, allocno LO_REGS
    r128: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a16 (r128,l0) best LO_REGS, allocno LO_REGS
    r127: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a19 (r127,l0) best LO_REGS, allocno LO_REGS
    r126: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a20 (r126,l0) best LO_REGS, allocno LO_REGS
    r125: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a21 (r125,l0) best LO_REGS, allocno LO_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a1 (r123,l0) best LO_REGS, allocno LO_REGS
    r122: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a3 (r122,l0) best LO_REGS, allocno LO_REGS
    r121: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a4 (r121,l0) best LO_REGS, allocno LO_REGS
    r120: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a5 (r120,l0) best LO_REGS, allocno LO_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a13 (r117,l0) best LO_REGS, allocno LO_REGS
    r116: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a14 (r116,l0) best LO_REGS, allocno LO_REGS
    r115: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a18 (r115,l0) best LO_REGS, allocno LO_REGS
    r114: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a22 (r114,l0) best LO_REGS, allocno LO_REGS
    r113: preferred LO_REGS, alternative GENERAL_REGS, allocno LO_REGS
    a23 (r113,l0) best LO_REGS, allocno LO_REGS

  a0(r124,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:11000
  a1(r123,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:16000
  a2(r136,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:15000
  a3(r122,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a4(r121,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a5(r120,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a6(r135,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:15000
  a7(r134,l0) costs: LO_REGS:0 HI_REGS:4000 CALLER_SAVE_REGS:4000 EVEN_REG:4000 GENERAL_REGS:4000 MEM:20000
  a8(r133,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:15000
  a9(r119,l0) costs: LO_REGS:2000 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a10(r132,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:15000
  a11(r118,l0) costs: LO_REGS:0 HI_REGS:0 CALLER_SAVE_REGS:0 EVEN_REG:0 GENERAL_REGS:0 MEM:20000
  a12(r131,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a13(r117,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a14(r116,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a15(r130,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:15000
  a16(r128,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:15000
  a17(r129,l0) costs: LO_REGS:0 HI_REGS:4000 CALLER_SAVE_REGS:4000 EVEN_REG:4000 GENERAL_REGS:4000 MEM:15000
  a18(r115,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a19(r127,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:15000
  a20(r126,l0) costs: LO_REGS:0 HI_REGS:4000 CALLER_SAVE_REGS:4000 EVEN_REG:4000 GENERAL_REGS:4000 MEM:20000
  a21(r125,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:20000
  a22(r114,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:15000
  a23(r113,l0) costs: LO_REGS:0 HI_REGS:2000 CALLER_SAVE_REGS:2000 EVEN_REG:2000 GENERAL_REGS:2000 MEM:15000

   Insn 56(l0): point = 0
   Insn 55(l0): point = 2
   Insn 51(l0): point = 4
   Insn 48(l0): point = 7
   Insn 47(l0): point = 9
   Insn 46(l0): point = 11
   Insn 45(l0): point = 13
   Insn 44(l0): point = 15
   Insn 43(l0): point = 17
   Insn 42(l0): point = 19
   Insn 41(l0): point = 21
   Insn 40(l0): point = 23
   Insn 39(l0): point = 25
   Insn 58(l0): point = 28
   Insn 34(l0): point = 30
   Insn 33(l0): point = 32
   Insn 32(l0): point = 34
   Insn 31(l0): point = 36
   Insn 30(l0): point = 38
   Insn 28(l0): point = 41
   Insn 27(l0): point = 43
   Insn 26(l0): point = 45
   Insn 25(l0): point = 47
   Insn 24(l0): point = 49
   Insn 23(l0): point = 51
   Insn 22(l0): point = 53
   Insn 19(l0): point = 56
   Insn 18(l0): point = 58
   Insn 17(l0): point = 60
   Insn 15(l0): point = 63
   Insn 14(l0): point = 65
   Insn 13(l0): point = 67
   Insn 12(l0): point = 69
   Insn 11(l0): point = 71
   Insn 10(l0): point = 73
   Insn 9(l0): point = 75
   Insn 8(l0): point = 77
   Insn 7(l0): point = 79
   Insn 6(l0): point = 81
   Insn 2(l0): point = 83
 a0(r124): [3..4]
 a1(r123): [28..30] [5..7]
 a2(r136): [10..11]
 a3(r122): [10..13]
 a4(r121): [14..15]
 a5(r120): [14..17]
 a6(r135): [18..19]
 a7(r134): [22..23]
 a8(r133): [24..25]
 a9(r119): [33..36]
 a10(r132): [33..34]
 a11(r118): [44..47]
 a12(r131): [44..45]
 a13(r117): [48..49]
 a14(r116): [48..51]
 a15(r130): [52..53]
 a16(r128): [57..60]
 a17(r129): [57..58]
 a18(r115): [66..67]
 a19(r127): [68..69]
 a20(r126): [72..73]
 a21(r125): [76..77]
 a22(r114): [78..79]
 a23(r113): [78..81]
Compressing live ranges: from 86 to 36 - 41%
Ranges after the compression:
 a0(r124): [0..1]
 a1(r123): [14..15] [2..3]
 a2(r136): [4..5]
 a3(r122): [4..5]
 a4(r121): [6..7]
 a5(r120): [6..7]
 a6(r135): [8..9]
 a7(r134): [10..11]
 a8(r133): [12..13]
 a9(r119): [16..17]
 a10(r132): [16..17]
 a11(r118): [18..19]
 a12(r131): [18..19]
 a13(r117): [20..21]
 a14(r116): [20..21]
 a15(r130): [22..23]
 a16(r128): [24..25]
 a17(r129): [24..25]
 a18(r115): [26..27]
 a19(r127): [28..29]
 a20(r126): [30..31]
 a21(r125): [32..33]
 a22(r114): [34..35]
 a23(r113): [34..35]
  regions=1, blocks=8, points=36
    allocnos=24 (big 0), copies=0, conflicts=0, ranges=25
Disposition:
   23:r113 l0     2   22:r114 l0     3   18:r115 l0     3   14:r116 l0     2
   13:r117 l0     3   11:r118 l0     3    9:r119 l0     3    5:r120 l0     2
    4:r121 l0     3    3:r122 l0     3    1:r123 l0     3    0:r124 l0     3
   21:r125 l0     3   20:r126 l0     3   19:r127 l0     3   16:r128 l0     3
   17:r129 l0     2   15:r130 l0     3   12:r131 l0     2   10:r132 l0     2
    8:r133 l0     3    7:r134 l0     3    6:r135 l0     3    2:r136 l0     2
+++Costs: overall 4000, reg 4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


_sbrk

Dataflow summary:
;;  fully invalidated by EH 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0]
;;  hardware regs used 	 13 [sp] 102 [sfp] 103 [afp]
;;  regular block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  eh block artificial uses 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 13 [sp] 14 [lr] 102 [sfp] 103 [afp]
;;  exit block uses 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp]
;;  regs ever live 	 0 [r0] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 100 [cc]
;;  ref usage 	r0={3d,4u} r1={2d} r2={2d} r3={2d} r7={1d,7u} r12={2d} r13={1d,8u} r14={2d} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={3d,2u} r101={1d} r102={1d,16u} r103={1d,6u} r104={1d} r105={1d} r106={1d} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={2d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 201{134d,67u,0e} in 40{39 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 113 114 115 125 126 127
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [3 incr+0 S4 A32])
        (reg:SI 0 r0 [ incr ])) "../Src/sysmem.c":54:1 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0 [ incr ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 113 [ _estack.0_1 ])
        (symbol_ref:SI ("_estack") [flags 0x40]  <var_decl 00000000059b4a20 _estack>)) "../Src/sysmem.c":58:32 977 {*thumb2_movsi_insn}
     (nil))
(insn 7 6 8 2 (set (reg:SI 114 [ _Min_Stack_Size.1_2 ])
        (symbol_ref:SI ("_Min_Stack_Size") [flags 0x40]  <var_decl 00000000059b4ab0 _Min_Stack_Size>)) "../Src/sysmem.c":58:53 977 {*thumb2_movsi_insn}
     (nil))
(insn 8 7 9 2 (set (reg:SI 125)
        (minus:SI (reg:SI 113 [ _estack.0_1 ])
            (reg:SI 114 [ _Min_Stack_Size.1_2 ]))) "../Src/sysmem.c":58:18 45 {*arm_subsi3_insn}
     (expr_list:REG_DEAD (reg:SI 114 [ _Min_Stack_Size.1_2 ])
        (expr_list:REG_DEAD (reg:SI 113 [ _estack.0_1 ])
            (nil))))
(insn 9 8 10 2 (set (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 stack_limit+0 S4 A32])
        (reg:SI 125)) "../Src/sysmem.c":58:18 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 125)
        (nil)))
(insn 10 9 11 2 (set (reg:SI 126)
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -4 [0xfffffffffffffffc])) [2 stack_limit+0 S4 A32])) "../Src/sysmem.c":59:18 977 {*thumb2_movsi_insn}
     (nil))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 max_heap+0 S4 A32])
        (reg:SI 126)) "../Src/sysmem.c":59:18 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 127)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":63:12 977 {*thumb2_movsi_insn}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 115 [ __sbrk_heap_end.2_3 ])
        (mem/f/c:SI (reg/f:SI 127) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":63:12 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 127)
        (nil)))
(insn 14 13 15 2 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 115 [ __sbrk_heap_end.2_3 ])
            (const_int 0 [0]))) "../Src/sysmem.c":63:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 115 [ __sbrk_heap_end.2_3 ])
        (nil)))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "../Src/sysmem.c":63:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 20)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 128 129
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg/f:SI 128)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":65:21 977 {*thumb2_movsi_insn}
     (nil))
(insn 18 17 19 3 (set (reg/f:SI 129)
        (symbol_ref:SI ("_end") [flags 0x40]  <var_decl 00000000059b4990 _end>)) "../Src/sysmem.c":65:21 977 {*thumb2_movsi_insn}
     (nil))
(insn 19 18 20 3 (set (mem/f/c:SI (reg/f:SI 128) [1 __sbrk_heap_end+0 S4 A32])
        (reg/f:SI 129)) "../Src/sysmem.c":65:21 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 129)
        (expr_list:REG_DEAD (reg/f:SI 128)
            (nil))))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 100 [cc] 116 117 118 130 131
(code_label 20 19 21 4 2 (nil) [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg/f:SI 130)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":69:23 977 {*thumb2_movsi_insn}
     (nil))
(insn 23 22 24 4 (set (reg/f:SI 116 [ __sbrk_heap_end.3_4 ])
        (mem/f/c:SI (reg/f:SI 130) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":69:23 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 130)
        (nil)))
(insn 24 23 25 4 (set (reg:SI 117 [ incr.4_5 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [3 incr+0 S4 A32])) "../Src/sysmem.c":69:23 977 {*thumb2_movsi_insn}
     (nil))
(insn 25 24 26 4 (set (reg/f:SI 118 [ _6 ])
        (plus:SI (reg/f:SI 116 [ __sbrk_heap_end.3_4 ])
            (reg:SI 117 [ incr.4_5 ]))) "../Src/sysmem.c":69:23 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 117 [ incr.4_5 ])
        (expr_list:REG_DEAD (reg/f:SI 116 [ __sbrk_heap_end.3_4 ])
            (nil))))
(insn 26 25 27 4 (set (reg:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -8 [0xfffffffffffffff8])) [1 max_heap+0 S4 A32])) "../Src/sysmem.c":69:6 977 {*thumb2_movsi_insn}
     (nil))
(insn 27 26 28 4 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 131)
            (reg/f:SI 118 [ _6 ]))) "../Src/sysmem.c":69:6 268 {*arm_cmpsi_insn}
     (expr_list:REG_DEAD (reg:SI 131)
        (expr_list:REG_DEAD (reg/f:SI 118 [ _6 ])
            (nil))))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (geu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "../Src/sysmem.c":69:6 273 {arm_cond_branch}
     (expr_list:REG_DEAD (reg:CC 100 cc)
        (nil))
 -> 37)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [s0] 17 [s1] 18 [s2] 19 [s3] 20 [s4] 21 [s5] 22 [s6] 23 [s7] 24 [s8] 25 [s9] 26 [s10] 27 [s11] 28 [s12] 29 [s13] 30 [s14] 31 [s15] 32 [s16] 33 [s17] 34 [s18] 35 [s19] 36 [s20] 37 [s21] 38 [s22] 39 [s23] 40 [s24] 41 [s25] 42 [s26] 43 [s27] 44 [s28] 45 [s29] 46 [s30] 47 [s31] 48 [d16] 49 [?16] 50 [d17] 51 [?17] 52 [d18] 53 [?18] 54 [d19] 55 [?19] 56 [d20] 57 [?20] 58 [d21] 59 [?21] 60 [d22] 61 [?22] 62 [d23] 63 [?23] 64 [d24] 65 [?24] 66 [d25] 67 [?25] 68 [d26] 69 [?26] 70 [d27] 71 [?27] 72 [d28] 73 [?28] 74 [d29] 75 [?29] 76 [d30] 77 [?30] 78 [d31] 79 [?31] 80 [wr0] 81 [wr1] 82 [wr2] 83 [wr3] 84 [wr4] 85 [wr5] 86 [wr6] 87 [wr7] 88 [wr8] 89 [wr9] 90 [wr10] 91 [wr11] 92 [wr12] 93 [wr13] 94 [wr14] 95 [wr15] 96 [wcgr0] 97 [wcgr1] 98 [wcgr2] 99 [wcgr3] 100 [cc] 101 [vfpcc] 104 [apsrq] 105 [apsrge] 106 [p0] 119 123 132
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 30 29 31 5 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000005d67b00 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/sysmem.c":71:5 291 {*call_value_symbol}
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 31 30 32 5 (set (reg/f:SI 119 [ _7 ])
        (reg:SI 0 r0)) "../Src/sysmem.c":71:5 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
(insn 32 31 33 5 (set (reg:SI 132)
        (const_int 12 [0xc])) "../Src/sysmem.c":71:11 977 {*thumb2_movsi_insn}
     (nil))
(insn 33 32 34 5 (set (mem:SI (reg/f:SI 119 [ _7 ]) [3 *_7+0 S4 A32])
        (reg:SI 132)) "../Src/sysmem.c":71:11 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg:SI 132)
        (expr_list:REG_DEAD (reg/f:SI 119 [ _7 ])
            (nil))))
(insn 34 33 58 5 (set (reg/f:SI 123 [ _11 ])
        (const_int -1 [0xffffffffffffffff])) "../Src/sysmem.c":72:12 977 {*thumb2_movsi_insn}
     (nil))
(jump_insn 58 34 59 5 (set (pc)
        (label_ref 49)) "../Src/sysmem.c":72:12 284 {*arm_jump}
     (nil)
 -> 49)
;;  succ:       7 [always] 
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 123

(barrier 59 58 37)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp]
;; lr  def 	 120 121 122 123 133 134 135 136
(code_label 37 59 38 6 3 (nil) [1 uses])
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (reg/f:SI 133)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":75:17 977 {*thumb2_movsi_insn}
     (nil))
(insn 40 39 41 6 (set (reg/f:SI 134)
        (mem/f/c:SI (reg/f:SI 133) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":75:17 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 133)
        (nil)))
(insn 41 40 42 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 prev_heap_end+0 S4 A32])
        (reg/f:SI 134)) "../Src/sysmem.c":75:17 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))
(insn 42 41 43 6 (set (reg/f:SI 135)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":76:19 977 {*thumb2_movsi_insn}
     (nil))
(insn 43 42 44 6 (set (reg/f:SI 120 [ __sbrk_heap_end.5_8 ])
        (mem/f/c:SI (reg/f:SI 135) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":76:19 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 135)
        (nil)))
(insn 44 43 45 6 (set (reg:SI 121 [ incr.6_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -20 [0xffffffffffffffec])) [3 incr+0 S4 A32])) "../Src/sysmem.c":76:19 977 {*thumb2_movsi_insn}
     (nil))
(insn 45 44 46 6 (set (reg/f:SI 122 [ _10 ])
        (plus:SI (reg/f:SI 120 [ __sbrk_heap_end.5_8 ])
            (reg:SI 121 [ incr.6_9 ]))) "../Src/sysmem.c":76:19 7 {*arm_addsi3}
     (expr_list:REG_DEAD (reg:SI 121 [ incr.6_9 ])
        (expr_list:REG_DEAD (reg/f:SI 120 [ __sbrk_heap_end.5_8 ])
            (nil))))
(insn 46 45 47 6 (set (reg/f:SI 136)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":76:19 977 {*thumb2_movsi_insn}
     (nil))
(insn 47 46 48 6 (set (mem/f/c:SI (reg/f:SI 136) [1 __sbrk_heap_end+0 S4 A32])
        (reg/f:SI 122 [ _10 ])) "../Src/sysmem.c":76:19 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg/f:SI 122 [ _10 ])
            (nil))))
(insn 48 47 49 6 (set (reg/f:SI 123 [ _11 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 102 sfp)
                (const_int -12 [0xfffffffffffffff4])) [1 prev_heap_end+0 S4 A32])) "../Src/sysmem.c":78:10 977 {*thumb2_movsi_insn}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 123

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }u-1(13){ }u-1(102){ }u-1(103){ }}
;; lr  in  	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 123
;; lr  use 	 7 [r7] 13 [sp] 102 [sfp] 103 [afp] 123
;; lr  def 	 0 [r0] 124
(code_label 49 48 50 7 4 (nil) [1 uses])
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 55 7 (set (reg/f:SI 124 [ <retval> ])
        (reg/f:SI 123 [ _11 ])) "../Src/sysmem.c":79:1 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 123 [ _11 ])
        (nil)))
(insn 55 51 56 7 (set (reg/i:SI 0 r0)
        (reg/f:SI 124 [ <retval> ])) "../Src/sysmem.c":79:1 977 {*thumb2_movsi_insn}
     (expr_list:REG_DEAD (reg/f:SI 124 [ <retval> ])
        (nil)))
(insn 56 55 0 7 (use (reg/i:SI 0 r0)) "../Src/sysmem.c":79:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [r0] 7 [r7] 13 [sp] 102 [sfp] 103 [afp]

