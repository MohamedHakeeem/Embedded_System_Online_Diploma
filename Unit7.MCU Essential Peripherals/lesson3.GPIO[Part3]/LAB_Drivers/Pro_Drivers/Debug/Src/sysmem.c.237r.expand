
;; Function _sbrk (_sbrk, funcdef_no=0, decl_uid=4470, cgraph_uid=1, symbol_order=1)

_sbrk (ptrdiff_t incr)
{
  uint8_t * prev_heap_end;
  const uint8_t * max_heap;
  const uint32_t stack_limit;
  void * D.4489;
  long unsigned int _estack.0_1;
  long unsigned int _Min_Stack_Size.1_2;
  uint8_t * __sbrk_heap_end.2_3;
  uint8_t * __sbrk_heap_end.3_4;
  sizetype incr.4_5;
  uint8_t * _6;
  int * _7;
  uint8_t * __sbrk_heap_end.5_8;
  sizetype incr.6_9;
  uint8_t * _10;
  void * _11;
  void * _21;
  void * _24;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _estack.0_1 = (long unsigned int) &_estack;
  _Min_Stack_Size.1_2 = (long unsigned int) &_Min_Stack_Size;
  stack_limit_14 = _estack.0_1 - _Min_Stack_Size.1_2;
  max_heap_15 = (const uint8_t *) stack_limit_14;
  __sbrk_heap_end.2_3 = __sbrk_heap_end;
  if (__sbrk_heap_end.2_3 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  __sbrk_heap_end = &_end;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  __sbrk_heap_end.3_4 = __sbrk_heap_end;
  incr.4_5 = (sizetype) incr_18(D);
  _6 = __sbrk_heap_end.3_4 + incr.4_5;
  if (max_heap_15 < _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _7 = __errno ();
  *_7 = 12;
  _24 = 4294967295B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  prev_heap_end_19 = __sbrk_heap_end;
  __sbrk_heap_end.5_8 = __sbrk_heap_end;
  incr.6_9 = (sizetype) incr_18(D);
  _10 = __sbrk_heap_end.5_8 + incr.6_9;
  __sbrk_heap_end = _10;
  _21 = prev_heap_end_19;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # _11 = PHI <_24(5), _21(6)>
<L4>:
  return _11;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_estack.0_1 - 1 )
Partition 2 (_Min_Stack_Size.1_2 - 2 )
Partition 3 (__sbrk_heap_end.2_3 - 3 )
Partition 4 (__sbrk_heap_end.3_4 - 4 )
Partition 5 (incr.4_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (__sbrk_heap_end.5_8 - 8 )
Partition 9 (incr.6_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 14 (stack_limit_14 - 14 )
Partition 15 (max_heap_15 - 15 )
Partition 18 (incr_18(D) - 18 )
Partition 19 (prev_heap_end_19 - 19 )
Partition 21 (_21 - 21 )
Partition 24 (_24 - 24 )
Partition 25 (_25(D) - 25 )


Coalescible Partition map 

Partition 0, base 0 (_11 - 11 21 24 )
Partition 1, base 1 (incr_18(D) - 18 )
Partition 4, base 2 (_25(D) - 25 )


Partition map 

Partition 0 (_11 - 11 )
Partition 1 (incr_18(D) - 18 )
Partition 2 (_21 - 21 )
Partition 3 (_24 - 24 )
Partition 4 (_25(D) - 25 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(10000, 0) _11 <-> _24
(10000, 0) _11 <-> _21

Partition map 

Partition 0 (_11 - 11 )
Partition 1 (incr_18(D) - 18 )
Partition 2 (_21 - 21 )
Partition 3 (_24 - 24 )
Partition 4 (_25(D) - 25 )

Coalesce list: (11)_11 & (24)_24 [map: 0, 3] : Success -> 0
Coalesce list: (11)_11 & (21)_21 [map: 0, 2] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_estack.0_1 - 1 )
Partition 1 (_Min_Stack_Size.1_2 - 2 )
Partition 2 (__sbrk_heap_end.2_3 - 3 )
Partition 3 (__sbrk_heap_end.3_4 - 4 )
Partition 4 (incr.4_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (__sbrk_heap_end.5_8 - 8 )
Partition 8 (incr.6_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 21 24 )
Partition 11 (stack_limit_14 - 14 )
Partition 12 (max_heap_15 - 15 )
Partition 13 (incr_18(D) - 18 )
Partition 14 (prev_heap_end_19 - 19 )
Partition 15 (_25(D) - 25 )

_sbrk (ptrdiff_t incr)
{
  uint8_t * prev_heap_end;
  const uint8_t * max_heap;
  const uint32_t stack_limit;
  void * D.4489;
  long unsigned int _estack.0_1;
  long unsigned int _Min_Stack_Size.1_2;
  uint8_t * __sbrk_heap_end.2_3;
  uint8_t * __sbrk_heap_end.3_4;
  sizetype incr.4_5;
  uint8_t * _6;
  int * _7;
  uint8_t * __sbrk_heap_end.5_8;
  sizetype incr.6_9;
  uint8_t * _10;
  void * _11;
  void * _21;
  void * _24;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _estack.0_1 = (long unsigned int) &_estack;
  _Min_Stack_Size.1_2 = (long unsigned int) &_Min_Stack_Size;
  stack_limit_14 = _estack.0_1 - _Min_Stack_Size.1_2;
  max_heap_15 = (const uint8_t *) stack_limit_14;
  __sbrk_heap_end.2_3 = __sbrk_heap_end;
  if (__sbrk_heap_end.2_3 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  __sbrk_heap_end = &_end;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  __sbrk_heap_end.3_4 = __sbrk_heap_end;
  incr.4_5 = (sizetype) incr_18(D);
  _6 = __sbrk_heap_end.3_4 + incr.4_5;
  if (max_heap_15 < _6)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _7 = __errno ();
  *_7 = 12;
  _24 = 4294967295B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  prev_heap_end_19 = __sbrk_heap_end;
  __sbrk_heap_end.5_8 = __sbrk_heap_end;
  incr.6_9 = (sizetype) incr_18(D);
  _10 = __sbrk_heap_end.5_8 + incr.6_9;
  __sbrk_heap_end = _10;
  _21 = prev_heap_end_19;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # _11 = PHI <_24(5), _21(6)>
<L4>:
  return _11;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _estack.0_1 = (long unsigned int) &_estack;

(insn 6 5 0 (set (reg:SI 113 [ _estack.0_1 ])
        (symbol_ref:SI ("_estack") [flags 0x40]  <var_decl 00000000059b4a20 _estack>)) "../Src/sysmem.c":58:32 -1
     (nil))

;; _Min_Stack_Size.1_2 = (long unsigned int) &_Min_Stack_Size;

(insn 7 6 0 (set (reg:SI 114 [ _Min_Stack_Size.1_2 ])
        (symbol_ref:SI ("_Min_Stack_Size") [flags 0x40]  <var_decl 00000000059b4ab0 _Min_Stack_Size>)) "../Src/sysmem.c":58:53 -1
     (nil))

;; stack_limit_14 = _estack.0_1 - _Min_Stack_Size.1_2;

(insn 8 7 9 (set (reg:SI 125)
        (minus:SI (reg:SI 113 [ _estack.0_1 ])
            (reg:SI 114 [ _Min_Stack_Size.1_2 ]))) "../Src/sysmem.c":58:18 -1
     (nil))

(insn 9 8 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 stack_limit+0 S4 A32])
        (reg:SI 125)) "../Src/sysmem.c":58:18 -1
     (nil))

;; max_heap_15 = (const uint8_t *) stack_limit_14;

(insn 10 9 11 (set (reg:SI 126)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 stack_limit+0 S4 A32])) "../Src/sysmem.c":59:18 -1
     (nil))

(insn 11 10 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 max_heap+0 S4 A32])
        (reg:SI 126)) "../Src/sysmem.c":59:18 -1
     (nil))

;; __sbrk_heap_end.2_3 = __sbrk_heap_end;

(insn 12 11 13 (set (reg/f:SI 127)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":63:12 -1
     (nil))

(insn 13 12 0 (set (reg/f:SI 115 [ __sbrk_heap_end.2_3 ])
        (mem/f/c:SI (reg/f:SI 127) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":63:12 -1
     (nil))

;; if (__sbrk_heap_end.2_3 == 0B)

(insn 14 13 15 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 115 [ __sbrk_heap_end.2_3 ])
            (const_int 0 [0]))) "../Src/sysmem.c":63:6 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../Src/sysmem.c":63:6 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; __sbrk_heap_end = &_end;

(insn 17 16 18 (set (reg/f:SI 128)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":65:21 -1
     (nil))

(insn 18 17 19 (set (reg/f:SI 129)
        (symbol_ref:SI ("_end") [flags 0x40]  <var_decl 00000000059b4990 _end>)) "../Src/sysmem.c":65:21 -1
     (nil))

(insn 19 18 0 (set (mem/f/c:SI (reg/f:SI 128) [1 __sbrk_heap_end+0 S4 A32])
        (reg/f:SI 129)) "../Src/sysmem.c":65:21 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 20 19 21 2 (nil) [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; __sbrk_heap_end.3_4 = __sbrk_heap_end;

(insn 22 21 23 (set (reg/f:SI 130)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":69:23 -1
     (nil))

(insn 23 22 0 (set (reg/f:SI 116 [ __sbrk_heap_end.3_4 ])
        (mem/f/c:SI (reg/f:SI 130) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":69:23 -1
     (nil))

;; incr.4_5 = (sizetype) incr_18(D);

(insn 24 23 0 (set (reg:SI 117 [ incr.4_5 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 incr+0 S4 A32])) "../Src/sysmem.c":69:23 -1
     (nil))

;; _6 = __sbrk_heap_end.3_4 + incr.4_5;

(insn 25 24 0 (set (reg/f:SI 118 [ _6 ])
        (plus:SI (reg/f:SI 116 [ __sbrk_heap_end.3_4 ])
            (reg:SI 117 [ incr.4_5 ]))) "../Src/sysmem.c":69:23 -1
     (nil))

;; if (max_heap_15 < _6)

(insn 26 25 27 (set (reg:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 max_heap+0 S4 A32])) "../Src/sysmem.c":69:6 -1
     (nil))

(insn 27 26 28 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 131)
            (reg/f:SI 118 [ _6 ]))) "../Src/sysmem.c":69:6 -1
     (nil))

(jump_insn 28 27 0 (set (pc)
        (if_then_else (geu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "../Src/sysmem.c":69:6 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _7 = __errno ();

(call_insn 30 29 31 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000005d67b00 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/sysmem.c":71:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))

(insn 31 30 0 (set (reg/f:SI 119 [ _7 ])
        (reg:SI 0 r0)) "../Src/sysmem.c":71:5 -1
     (nil))

;; *_7 = 12;

(insn 32 31 33 (set (reg:SI 132)
        (const_int 12 [0xc])) "../Src/sysmem.c":71:11 -1
     (nil))

(insn 33 32 0 (set (mem:SI (reg/f:SI 119 [ _7 ]) [3 *_7+0 S4 A32])
        (reg:SI 132)) "../Src/sysmem.c":71:11 -1
     (nil))

;; _24 = 4294967295B;

(insn 34 33 0 (set (reg/f:SI 123 [ _11 ])
        (const_int -1 [0xffffffffffffffff])) "../Src/sysmem.c":72:12 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 6

;; 

(code_label 37 36 38 3 (nil) [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; prev_heap_end_19 = __sbrk_heap_end;

(insn 39 38 40 (set (reg/f:SI 133)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":75:17 -1
     (nil))

(insn 40 39 41 (set (reg/f:SI 134)
        (mem/f/c:SI (reg/f:SI 133) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":75:17 -1
     (nil))

(insn 41 40 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 prev_heap_end+0 S4 A32])
        (reg/f:SI 134)) "../Src/sysmem.c":75:17 -1
     (nil))

;; __sbrk_heap_end.5_8 = __sbrk_heap_end;

(insn 42 41 43 (set (reg/f:SI 135)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":76:19 -1
     (nil))

(insn 43 42 0 (set (reg/f:SI 120 [ __sbrk_heap_end.5_8 ])
        (mem/f/c:SI (reg/f:SI 135) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":76:19 -1
     (nil))

;; incr.6_9 = (sizetype) incr_18(D);

(insn 44 43 0 (set (reg:SI 121 [ incr.6_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 incr+0 S4 A32])) "../Src/sysmem.c":76:19 -1
     (nil))

;; _10 = __sbrk_heap_end.5_8 + incr.6_9;

(insn 45 44 0 (set (reg/f:SI 122 [ _10 ])
        (plus:SI (reg/f:SI 120 [ __sbrk_heap_end.5_8 ])
            (reg:SI 121 [ incr.6_9 ]))) "../Src/sysmem.c":76:19 -1
     (nil))

;; __sbrk_heap_end = _10;

(insn 46 45 47 (set (reg/f:SI 136)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":76:19 -1
     (nil))

(insn 47 46 0 (set (mem/f/c:SI (reg/f:SI 136) [1 __sbrk_heap_end+0 S4 A32])
        (reg/f:SI 122 [ _10 ])) "../Src/sysmem.c":76:19 -1
     (nil))

;; _21 = prev_heap_end_19;

(insn 48 47 0 (set (reg/f:SI 123 [ _11 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 prev_heap_end+0 S4 A32])) "../Src/sysmem.c":78:10 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; <L4>:

(code_label 49 48 50 4 (nil) [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; return _11;

(insn 51 50 52 (set (reg/f:SI 124 [ <retval> ])
        (reg/f:SI 123 [ _11 ])) "../Src/sysmem.c":79:1 -1
     (nil))

(jump_insn 52 51 53 (set (pc)
        (label_ref 0)) "../Src/sysmem.c":79:1 -1
     (nil))

(barrier 53 52 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 52.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 incr+0 S4 A32])
        (reg:SI 0 r0 [ incr ])) "../Src/sysmem.c":54:1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 113 [ _estack.0_1 ])
        (symbol_ref:SI ("_estack") [flags 0x40]  <var_decl 00000000059b4a20 _estack>)) "../Src/sysmem.c":58:32 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 114 [ _Min_Stack_Size.1_2 ])
        (symbol_ref:SI ("_Min_Stack_Size") [flags 0x40]  <var_decl 00000000059b4ab0 _Min_Stack_Size>)) "../Src/sysmem.c":58:53 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 125)
        (minus:SI (reg:SI 113 [ _estack.0_1 ])
            (reg:SI 114 [ _Min_Stack_Size.1_2 ]))) "../Src/sysmem.c":58:18 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 stack_limit+0 S4 A32])
        (reg:SI 125)) "../Src/sysmem.c":58:18 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 126)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [2 stack_limit+0 S4 A32])) "../Src/sysmem.c":59:18 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 max_heap+0 S4 A32])
        (reg:SI 126)) "../Src/sysmem.c":59:18 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:SI 127)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":63:12 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 115 [ __sbrk_heap_end.2_3 ])
        (mem/f/c:SI (reg/f:SI 127) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":63:12 -1
     (nil))
(insn 14 13 15 2 (set (reg:CC 100 cc)
        (compare:CC (reg/f:SI 115 [ __sbrk_heap_end.2_3 ])
            (const_int 0 [0]))) "../Src/sysmem.c":63:6 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) "../Src/sysmem.c":63:6 -1
     (nil)
 -> 20)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:SI 128)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":65:21 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 129)
        (symbol_ref:SI ("_end") [flags 0x40]  <var_decl 00000000059b4990 _end>)) "../Src/sysmem.c":65:21 -1
     (nil))
(insn 19 18 20 4 (set (mem/f/c:SI (reg/f:SI 128) [1 __sbrk_heap_end+0 S4 A32])
        (reg/f:SI 129)) "../Src/sysmem.c":65:21 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 20 19 21 5 2 (nil) [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:SI 130)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":69:23 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:SI 116 [ __sbrk_heap_end.3_4 ])
        (mem/f/c:SI (reg/f:SI 130) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":69:23 -1
     (nil))
(insn 24 23 25 5 (set (reg:SI 117 [ incr.4_5 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 incr+0 S4 A32])) "../Src/sysmem.c":69:23 -1
     (nil))
(insn 25 24 26 5 (set (reg/f:SI 118 [ _6 ])
        (plus:SI (reg/f:SI 116 [ __sbrk_heap_end.3_4 ])
            (reg:SI 117 [ incr.4_5 ]))) "../Src/sysmem.c":69:23 -1
     (nil))
(insn 26 25 27 5 (set (reg:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 max_heap+0 S4 A32])) "../Src/sysmem.c":69:6 -1
     (nil))
(insn 27 26 28 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 131)
            (reg/f:SI 118 [ _6 ]))) "../Src/sysmem.c":69:6 -1
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (geu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "../Src/sysmem.c":69:6 -1
     (nil)
 -> 37)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 30 29 31 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__errno") [flags 0x41]  <function_decl 0000000005d67b00 __errno>) [0 __errno S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "../Src/sysmem.c":71:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
(insn 31 30 32 6 (set (reg/f:SI 119 [ _7 ])
        (reg:SI 0 r0)) "../Src/sysmem.c":71:5 -1
     (nil))
(insn 32 31 33 6 (set (reg:SI 132)
        (const_int 12 [0xc])) "../Src/sysmem.c":71:11 -1
     (nil))
(insn 33 32 34 6 (set (mem:SI (reg/f:SI 119 [ _7 ]) [3 *_7+0 S4 A32])
        (reg:SI 132)) "../Src/sysmem.c":71:11 -1
     (nil))
(insn 34 33 35 6 (set (reg/f:SI 123 [ _11 ])
        (const_int -1 [0xffffffffffffffff])) "../Src/sysmem.c":72:12 -1
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (label_ref 49)) "../Src/sysmem.c":72:12 -1
     (nil)
 -> 49)
;;  succ:       8

(barrier 36 35 37)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 37 36 38 7 3 (nil) [1 uses])
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg/f:SI 133)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":75:17 -1
     (nil))
(insn 40 39 41 7 (set (reg/f:SI 134)
        (mem/f/c:SI (reg/f:SI 133) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":75:17 -1
     (nil))
(insn 41 40 42 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 prev_heap_end+0 S4 A32])
        (reg/f:SI 134)) "../Src/sysmem.c":75:17 -1
     (nil))
(insn 42 41 43 7 (set (reg/f:SI 135)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":76:19 -1
     (nil))
(insn 43 42 44 7 (set (reg/f:SI 120 [ __sbrk_heap_end.5_8 ])
        (mem/f/c:SI (reg/f:SI 135) [1 __sbrk_heap_end+0 S4 A32])) "../Src/sysmem.c":76:19 -1
     (nil))
(insn 44 43 45 7 (set (reg:SI 121 [ incr.6_9 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 incr+0 S4 A32])) "../Src/sysmem.c":76:19 -1
     (nil))
(insn 45 44 46 7 (set (reg/f:SI 122 [ _10 ])
        (plus:SI (reg/f:SI 120 [ __sbrk_heap_end.5_8 ])
            (reg:SI 121 [ incr.6_9 ]))) "../Src/sysmem.c":76:19 -1
     (nil))
(insn 46 45 47 7 (set (reg/f:SI 136)
        (symbol_ref:SI ("__sbrk_heap_end") [flags 0x2]  <var_decl 00000000059b4900 __sbrk_heap_end>)) "../Src/sysmem.c":76:19 -1
     (nil))
(insn 47 46 48 7 (set (mem/f/c:SI (reg/f:SI 136) [1 __sbrk_heap_end+0 S4 A32])
        (reg/f:SI 122 [ _10 ])) "../Src/sysmem.c":76:19 -1
     (nil))
(insn 48 47 49 7 (set (reg/f:SI 123 [ _11 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 prev_heap_end+0 S4 A32])) "../Src/sysmem.c":78:10 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 49 48 50 8 4 (nil) [1 uses])
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 55 8 (set (reg/f:SI 124 [ <retval> ])
        (reg/f:SI 123 [ _11 ])) "../Src/sysmem.c":79:1 -1
     (nil))
(insn 55 51 56 8 (set (reg/i:SI 0 r0)
        (reg/f:SI 124 [ <retval> ])) "../Src/sysmem.c":79:1 -1
     (nil))
(insn 56 55 0 8 (use (reg/i:SI 0 r0)) "../Src/sysmem.c":79:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

