/*
 * STM32F103X8.h
 *
 *  Created on: Oct 8, 2024
 *      Author: Mohamed Abd El Hakeem El Said Ali
 */

#ifndef INC_STM32F103X8_H_
#define INC_STM32F103X8_H_




//-----------------------------
//Includes
#include <stdio.h>
#include <stdlib.h>
//-----------------------------


//-----------------------------
//Base addresses for Memories
#define FLASH_Memory_BASE     						0x08000000UL
#define System_Memory_BASE     						0x1FFFF000UL
#define SRAM_BASE              						0x20000000UL

#define Peripherals_BASE       						0x40000000UL

#define Cortex_M3_Internal_Peripherals_BASE         0xE0000000UL
//-----------------------------




//-----------------------------
//Base addresses for BUS Peripherals

/*Base addresses for AHB Peripherals*/
#define RCC_BASE                                  (Peripherals_BASE + 0x00021000UL)



/*Base addresses for APB2  Peripherals*/

//GPIO
//A, B fully included in LQFP48 Package
#define GPIOA_BASE      (Peripherals_BASE + 0x00010800UL)
#define GPIOB_BASE      (Peripherals_BASE + 0x00010C00UL)
//C, D partial included in LQFP48 Package
#define GPIOC_BASE      (Peripherals_BASE + 0x00011000UL)
#define GPIOD_BASE      (Peripherals_BASE + 0x00011400UL)
//E, P Not  included in LQFP48 Package
#define GPIOE_BASE      (Peripherals_BASE + 0x00011800UL)


//Alternative & External Interrupt
#define AFIO_BASE      (Peripherals_BASE + 0x00010000UL)
#define EXTI_BASE      (Peripherals_BASE + 0x00010400UL)


/*Base addresses for APB2  Peripherals*/
//..........
//-----------------------------




//-*-*-*-*-*-*-*-*-*-*-*-
//Peripheral register:RCC
//-*-*-*-*-*-*-*-*-*-*-*
typedef struct
{

	volatile uint32_t CR;
	volatile uint32_t CFGR;
	volatile uint32_t CIR;
	volatile uint32_t APB2RSTR;
	volatile uint32_t APB1RSTR;
	volatile uint32_t AHBENR;
	volatile uint32_t APB2ENR;
	volatile uint32_t APB1ENR;
	volatile uint32_t BDCR;
	volatile uint32_t CSR;
}RCC_TypedDef;




//-*-*-*-*-*-*-*-*-*-*-*-
//Peripheral register:GPIO
//-*-*-*-*-*-*-*-*-*-*-*
typedef struct
{

	volatile uint32_t CRL;
	volatile uint32_t CRH;
	volatile uint32_t IDR;
	volatile uint32_t ODR;
	volatile uint32_t BSRR;
	volatile uint32_t BRR;
	volatile uint32_t LCKR;
}GPIO_TypedDef;


//-*-*-*-*-*-*-*-*-*-*-*-
//Peripheral register:AFIO
//-*-*-*-*-*-*-*-*-*-*-*
typedef struct
{

	volatile uint32_t EVCR;
	volatile uint32_t MAPR;
	volatile uint32_t EXTICR1;
	volatile uint32_t EXTICR2;
	volatile uint32_t EXTICR3;
	volatile uint32_t EXTICR4;
	uint32_t RESERVED0;
	volatile uint32_t MAPR2;
}AFIO_TypedDef;


//-*-*-*-*-*-*-*-*-*-*-*-
//Peripheral register:EXTI
//-*-*-*-*-*-*-*-*-*-*-*
typedef struct
{

	volatile uint32_t IMR;
	volatile uint32_t EMR;
	volatile uint32_t RTSR;
	volatile uint32_t FTSR;
	volatile uint32_t SWIER;
	volatile uint32_t PR;
}EXTI_TypedDef;






//-*-*-*-*-*-*-*-*-*-*-*-
//Peripheral Instants:
#define RCC     			 ((RCC_TypedDef*) RCC_BASE    )


#define GPIOA                ((GPIO_TypedDef*) GPIOA_BASE )
#define GPIOB                ((GPIO_TypedDef*) GPIOB_BASE )
#define GPIOC                ((GPIO_TypedDef*) GPIOC_BASE )
#define GPIOD                ((GPIO_TypedDef*) GPIOD_BASE )
#define GPIOE                ((GPIO_TypedDef*) GPIOE_BASE )

#define AFIO                 ((GPIO_TypedDef*) AFIO_BASE  )
#define EXTI                 ((GPIO_TypedDef*) EXTI_BASE  )
//-*-*-*-*-*-*-*-*-*-*-*



//-*-*-*-*-*-*-*-*-*-*-*-
//clock enable Macros:RCC_GPIO
#define GPIOA_CLOCK_ENABLE    (RCC->APB2ENR |= (1 << 2) )
#define GPIOB_CLOCK_ENABLE    (RCC->APB2ENR |= (1 << 3) )
#define GPIOC_CLOCK_ENABLE    (RCC->APB2ENR |= (1 << 4) )
#define GPIOD_CLOCK_ENABLE    (RCC->APB2ENR |= (1 << 5) )

//clock disable Macros:RCC_GPIO
#define GPIOA_CLOCK_DISABLE    (RCC->APB2ENR |= (1 << 2) )
#define GPIOA_CLOCK_DISABLE    (RCC->APB2ENR |= (1 << 3) )
#define GPIOA_CLOCK_DISABLE    (RCC->APB2ENR |= (1 << 4) )
#define GPIOA_CLOCK_DISABLE    (RCC->APB2ENR |= (1 << 5) )


//-*-*-*-*-*-*-*-*-*-*-*






//-*-*-*-*-*-*-*-*-*-*-*-
//Generic Macros:
//-*-*-*-*-*-*-*-*-*-*-*









#endif /* INC_STM32F103X8_H_ */
