/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <STM32F103X8.h>
#include <stm32f103x8_gpio_driver.h>







void GPIOX_Init(void)
{
	//Enable RCC_CLOCK PORTA , 	//Enable RCC_CLOCK PORTB
	MCAL_GPIO_Enable_ClocK(GPIOA);
	MCAL_GPIO_Enable_ClocK(GPIOB);

	//PORTA PIN1, PIN13  AS Input [HIGH Z Impedance [Floating]]
	GPIO_PinConfig_t gpio_pinconfig;

	gpio_pinconfig.GPIO_PinNumber = GPIO_PIN_1;
	gpio_pinconfig.GPIO_Mode = GPIO_Mode_Inp_Floating;
	gpio_pinconfig.GPIO_Speed = GPIO_Speed_Reset_State;
	MCAL_GPIO_Init(GPIOA, &gpio_pinconfig);


	gpio_pinconfig.GPIO_PinNumber = GPIO_PIN_13;
	gpio_pinconfig.GPIO_Mode = GPIO_Mode_Inp_Floating;
	gpio_pinconfig.GPIO_Speed = GPIO_Speed_Reset_State;
	MCAL_GPIO_Init(GPIOA, &gpio_pinconfig);


	//PORTB PIN1, PIN13  AS Output [Push Pull Output] ,  max speed 10 MHz.
	gpio_pinconfig.GPIO_PinNumber = GPIO_PIN_1;
	gpio_pinconfig.GPIO_Mode = GPIO_Mode_Out_push_pull;
	gpio_pinconfig.GPIO_Speed = GPIO_Speed_10MHz;
	MCAL_GPIO_Init(GPIOB, &gpio_pinconfig);

	gpio_pinconfig.GPIO_PinNumber = GPIO_PIN_13;
	gpio_pinconfig.GPIO_Mode = GPIO_Mode_Out_push_pull;
	gpio_pinconfig.GPIO_Speed = GPIO_Speed_10MHz;
	MCAL_GPIO_Init(GPIOB, &gpio_pinconfig);


}





void Wait_s(int Time_S)
{
	vuint32_t  i;
	for(i=0;i<Time_S;i++);
}


int main(void)
{

	GPIOX_Init();

	while(1)
	{
		//PA1 is connected to External PUR
		if(MCAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) == 0)
		{

			MCAL_GPIO_TogglePin(GPIOB,GPIO_PIN_1 );
			while(MCAL_GPIO_ReadPin(GPIOA, GPIO_PIN_1) == 0);
		}

		//PA13 is connected to External PDR
		if(MCAL_GPIO_ReadPin(GPIOA,GPIO_PIN_13) == 1)
		{

			MCAL_GPIO_TogglePin(GPIOB,GPIO_PIN_13 );

		}


		Wait_s(10000);

	}

	return 0;

}

