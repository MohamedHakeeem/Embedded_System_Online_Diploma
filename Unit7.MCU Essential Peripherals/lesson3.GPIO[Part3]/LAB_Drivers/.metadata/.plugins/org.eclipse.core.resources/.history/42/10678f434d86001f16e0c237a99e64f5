/*
 * stm32f103x8_gpio_driver.h
 *
 *  Created on: Oct 8, 2024
 *      Author: Mohamed Abd El Hakeem El Said Ali
 */

#ifndef INC_STM32F103X8_GPIO_DRIVER_H_
#define INC_STM32F103X8_GPIO_DRIVER_H_




//-----------------------------
//Includes
#include "STM32F103X8.h"
//-----------------------------


//-----------------------------
//User type definitions (structures)
typedef struct
{

	uint8_t GPIO_PinNumber ;     //Specifies the GPIO Pin_Number
							     //This Parameter can be a value of @ref GPIO_PINS_Define

	uint8_t GPIO_Mode;           //Specifies the operating mode for the selected pin
							     //This Parameter can be a value of @ref GPIO_Mode_Define

	uint8_t GPIO_Speed;   //Specifies the speed for the selected pin
								 //This Parameter can be a value of @ref GPIO_Speed_Define
}GPIO_PinConfig_t;
//-----------------------------



//-----------------------------
//Macros Configuration References

/* @ref GPIO_PINS_Define */
#define  GPIO_PIN_0       ((uint16_t) 0x0001)
#define  GPIO_PIN_1       ((uint16_t) 0x0002)
#define  GPIO_PIN_2       ((uint16_t) 0x0004)
#define  GPIO_PIN_3       ((uint16_t) 0x0008)
#define  GPIO_PIN_4       ((uint16_t) 0x0010)
#define  GPIO_PIN_5       ((uint16_t) 0x0020)
#define  GPIO_PIN_6       ((uint16_t) 0x0040)
#define  GPIO_PIN_7       ((uint16_t) 0x0080)
#define  GPIO_PIN_8       ((uint16_t) 0x0100)
#define  GPIO_PIN_9       ((uint16_t) 0x0200)
#define  GPIO_PIN_10      ((uint16_t) 0x0400)
#define  GPIO_PIN_11      ((uint16_t) 0x0800)
#define  GPIO_PIN_12      ((uint16_t) 0x1000)
#define  GPIO_PIN_13      ((uint16_t) 0x2000)
#define  GPIO_PIN_14      ((uint16_t) 0x4000)
#define  GPIO_PIN_15      ((uint16_t) 0x8000)
#define  GPIO_PIN_ALL     ((uint16_t) 0xFFFF)

//-----------------------------



/*@ref GPIO_Mode_Define*/
/* CNFy[1:0]
>>>>>>>>>>>>>>>>>>>>>>>>In input mode:
00: Analog mode
01: Floating input (reset state)
10: Input with pull-up / pull-down
11: Reserved
>>>>>>>>>>>>>>>>>>>>>>>In output mode:
00: General purpose output push-pull
01: General purpose output Open-drain
10: Alternate function output Push-pull
11: Alternate function output Open-drain
*/


#define GPIO_Mode_Inp_Analog               (0x0)
#define GPIO_Mode_Inp_Floating             (0x1)
#define GPIO_Mode_Inp_pull_up              (0x2)
#define GPIO_Mode_Inp_pull_down            (0x3)
#define GPIO_Mode_Inp_AF                   (0x1)

#define GPIO_Mode_Out_push_pull            (0x4)
#define GPIO_Mode_Out_Open_drain           (0x5)
#define GPIO_Mode_Out_AF_push_pull         (0x6)
#define GPIO_Mode_Out_AF_Open_drain        (0x7)



/*@ref GPIO_Speed_Define*/
/*MODEy[1:0]: Port x mode bits (y= 0 .. 7), In Case Of Output Mode
These bits are written by software to configure the corresponding I/O port
00: Input mode (reset state)
01: Output mode, max speed 10 MHz.
10: Output mode, max speed 2 MHz.
11: Output mode, max speed 50 MHz
*/

#define GPIO_Speed_Reset_State          (0b00)  // you should set this define in case of Input_Mode
#define GPIO_Speed_10MHz            	(0b01)
#define GPIO_Speed_2MHz             	(0b10)
#define GPIO_Speed_50MHz            	(0b11)






/*
 * ===============================================
 * APIs Supported by "MCAL GPIO DRIVER"
 * ===============================================
 */


void MCAL_GPIO_Init(GPIO_TypedDef* GPIOx, GPIO_PinConfig_t* PinConfig );
void MCAL_GPIO_DInit(GPIO_TypedDef* GPIOx);

uint8_t  MCAL_GPIO_ReadPin(GPIO_TypedDef* GPIOx,uint8_t PinNumber );
uint32_t MCAL_GPIO_ReadPort(GPIO_TypedDef* GPIOx);


void MCAL_GPIO_WritePin(GPIO_TypedDef* GPIOx,uint8_t PinNumber , uint8_t Value);
void MCAL_GPIO_WritePort(GPIO_TypedDef* GPIOx, uint32_t Value);


void MCAL_GPIO_TogglePin(GPIO_TypedDef* GPIOx,uint8_t PinNumber);

void MCAL_GPIO_LockPin(GPIO_TypedDef* GPIOx,uint8_t PinNumber);









#endif /* INC_STM32F103X8_GPIO_DRIVER_H_ */
