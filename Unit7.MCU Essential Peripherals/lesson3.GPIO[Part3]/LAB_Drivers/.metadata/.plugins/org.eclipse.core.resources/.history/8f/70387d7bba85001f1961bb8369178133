/*
 * stm32f103x8_gpio_driver.h
 *
 *  Created on: Oct 8, 2024
 *      Author: Mohamed Abd El Hakeem El Said Ali
 */

#ifndef INC_STM32F103X8_GPIO_DRIVER_H_
#define INC_STM32F103X8_GPIO_DRIVER_H_




//-----------------------------
//Includes
#include "STM32F103X8.h"
//-----------------------------


//-----------------------------
//User type definitions (structures)
typedef struct
{

	uint8_t GPIO_PinNumber ;     //Specifies the GPIO Pin_Number
							     //This Parameter can be a value of @ref GPIO_PINS_Define

	uint8_t GPIO_Mode;           //Specifies the operating mode for the selected pin
							     //This Parameter can be a value of @ref GPIO_Mode_Define

	uint8_t GPIO_Output_Speed;   //Specifies the speed for the selected pin
								 //This Parameter can be a value of @ref GPIO_Speed_Define
}GPIO_PinConfig_t;
//-----------------------------



//-----------------------------
//Macros Configuration References

/* @ref GPIO_PINS_Define */
#define  GPIO_PIN0       ((uint16_t) 0x0001)
#define  GPIO_PIN1       ((uint16_t) 0x0002)
#define  GPIO_PIN2       ((uint16_t) 0x0004)
#define  GPIO_PIN3       ((uint16_t) 0x0008)
#define  GPIO_PIN4       4
#define  GPIO_PIN5       5
#define  GPIO_PIN6       6
#define  GPIO_PIN7       7
#define  GPIO_PIN8       8
#define  GPIO_PIN9       9
#define  GPIO_PIN10      10
#define  GPIO_PIN11      11
#define  GPIO_PIN12      12
#define  GPIO_PIN13      13
#define  GPIO_PIN14      14
#define  GPIO_PIN15      15
//-----------------------------



/*@ref GPIO_Mode_Define*/
/* CNFy[1:0]
>>>>>>>>>>>>>>>>>>>>>>>>In input mode:
00: Analog mode
01: Floating input (reset state)
10: Input with pull-up / pull-down
11: Reserved
>>>>>>>>>>>>>>>>>>>>>>>In output mode:
00: General purpose output push-pull
01: General purpose output Open-drain
10: Alternate function output Push-pull
11: Alternate function output Open-drain
*/


#define GPIO_Mode_Inp_Analog              0x00000000u
#define GPIO_Mode_Inp_Floating            0x00000001u
#define GPIO_Mode_Inp_pull_up             0x00000002u
#define GPIO_Mode_Inp_pull_down           0x00000003u

#define GPIO_Mode_Out_push_pull           0x00000004u
#define GPIO_Mode_Out_Open_drain          0x00000005u
#define GPIO_Mode_Out_AF_push_pull        0x00000006u
#define GPIO_Mode_Out_AF_Open_drain       0x00000007u
#define GPIO_Mode_Inp_AF                  0x00000008u



/*@ref GPIO_Speed_Define*/
/*MODEy[1:0]: Port x mode bits (y= 0 .. 7), In Case Of Output Mode
These bits are written by software to configure the corresponding I/O port
00: Input mode (reset state)
01: Output mode, max speed 10 MHz.
10: Output mode, max speed 2 MHz.
11: Output mode, max speed 50 MHz
*/

#define GPIO_Speed_10MHz            0x00000001u
#define GPIO_Speed_2MHz             0x00000002u
#define GPIO_Speed_50MHz            0x00000003u






/*
 * ===============================================
 * APIs Supported by "MCAL GPIO DRIVER"
 * ===============================================
 */


void MCAL_GPIO_Init(GPIO_TypedDef* GPIOx, GPIO_PinConfig_t* PinConfig );
void MCAL_GPIO_DInit(GPIO_TypedDef* GPIOx);

uint8_t  MCAL_GPIO_ReadPin(GPIO_TypedDef* GPIOx,uint8_t PinNumber );
uint32_t MCAL_GPIO_ReadPort(GPIO_TypedDef* GPIOx);


void MCAL_GPIO_WritePin(GPIO_TypedDef* GPIOx,uint8_t PinNumber , uint8_t Value);
void MCAL_GPIO_WritePort(GPIO_TypedDef* GPIOx, uint32_t Value);


void MCAL_GPIO_TogglePin(GPIO_TypedDef* GPIOx,uint8_t PinNumber);

void MCAL_GPIO_LockPin(GPIO_TypedDef* GPIOx,uint8_t PinNumber);









#endif /* INC_STM32F103X8_GPIO_DRIVER_H_ */
